---
http_interactions:
- request:
    method: get
    uri: https://proxy.golang.org/github.com/robfig/cron/@v/v1.2.0.info
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '50'
      Content-Type:
      - application/json
      Date:
      - Tue, 20 Apr 2021 20:45:11 GMT
      Expires:
      - Tue, 20 Apr 2021 23:45:11 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      Cache-Control:
      - public, max-age=10800
      Age:
      - '533'
      Alt-Svc:
      - h3-29=":443"; ma=2592000,h3-T051=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
    body:
      encoding: UTF-8
      string: '{"Version":"v1.2.0","Time":"2018-05-05T20:34:41Z"}'
    http_version: 
  recorded_at: Tue, 20 Apr 2021 20:54:04 GMT
- request:
    method: get
    uri: https://pkg.go.dev/github.com/robfig/cron
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip,deflate,br
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Content-Security-Policy:
      - 'object-src ''none''; base-uri ''none''; script-src ''unsafe-inline'' ''strict-dynamic''
        https: http: ''sha256-CgM7SjnSbDyuIteS+D1CQuSnzyKwL0qtXLU6ZW2hB+g='' ''sha256-dwce5DnVX7uk6fdvvNxQyLTH/cJrTMDK6zzrdKwdwcg=''
        ''sha256-M35cNZ8vPcaBGw5WTgh0Gn7DLsxkvPbdTFN1pELeevM='' ''sha256-v9+UvX+P27rKraeTl7uAfOWdLmmQU39RskIoqUrU4wo=''
        ''sha256-4FhQmh9Hu76JzYm35KNNysU2Z7buJwg3cMSHsGwKSCE='' ''sha256-y5EX2GR3tCwSK0/kmqZnsWVeBROA8tA75L+I+woljOE=''
        ''sha256-r4g06j/B7WYKOSl8cFfvuZOyiYA1tOyrbnxapiSP64g='' ''sha256-nF5UdhqQFxB95DCaw1XdSQCEkIjoMhorTCQ+nQ4+Lq4=''
        ''sha256-L+G1K2BEWa+o2vPy1pwdabLjINBByPWi1NkRwvASUq8='' ''sha256-hb8VdkRSeBmkNlbshYmBnkYWC/BYHCPiz5s7liRcZNM=''
        ''sha256-KBdPSv2Ajjw3jsa29qBhRW49nNx3jXxOLZIWX545FCA='''
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Cloud-Trace-Context:
      - 19c7ee654cd3069cac41afb23c427b98
      Date:
      - Tue, 20 Apr 2021 20:54:04 GMT
      Server:
      - Google Frontend
      Cache-Control:
      - private
      Content-Length:
      - '71781'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        Cgo8IURPQ1RZUEUgaHRtbD4KPGh0bWwgbGFuZz0iZW4iPgoKPHNjcmlwdD53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignZXJyb3InLCB3aW5kb3cuX19lcnI9ZnVuY3Rpb24gZihlKXtmLnA9Zi5wfHxbXTtmLnAucHVzaChlKX0pOzwvc2NyaXB0Pgo8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+CjxtZXRhIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgY29udGVudD0iSUU9ZWRnZSI+CjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSI+CgogIDxtZXRhIG5hbWU9IkRlc2NyaXB0aW9uIiBjb250ZW50PSIxNTA5Ij4KCjxtZXRhIGNsYXNzPSJqcy1ndG1JRCIgZGF0YS1ndG1pZD0iR1RNLVc4TVZRWEciPgo8bGluayBocmVmPSIvc3RhdGljL2Nzcy9zdHlsZXNoZWV0LmNzcz92ZXJzaW9uPTIwMjEtMDQtMjB0MTYtMTAtODkzY2MyYjcxYTVhZmUwOTdlOWI3ODY5OWNiOWNjNWQxOTZkMzAwMiIgcmVsPSJzdHlsZXNoZWV0Ij4KPGxpbmsgaHJlZj0iL3RoaXJkX3BhcnR5L2RpYWxvZy1wb2x5ZmlsbC9kaWFsb2ctcG9seWZpbGwuY3NzP3ZlcnNpb249MjAyMS0wNC0yMHQxNi0xMC04OTNjYzJiNzFhNWFmZTA5N2U5Yjc4Njk5Y2I5Y2M1ZDE5NmQzMDAyIiByZWw9InN0eWxlc2hlZXQiPgo8dGl0bGU+Y3JvbiDCtyBwa2cuZ28uZGV2PC90aXRsZT4KCiAgPGxpbmsgaHJlZj0iL3N0YXRpYy9jc3MvdW5pdC5jc3M/dmVyc2lvbj0yMDIxLTA0LTIwdDE2LTEwLTg5M2NjMmI3MWE1YWZlMDk3ZTliNzg2OTljYjljYzVkMTk2ZDMwMDIiIHJlbD0ic3R5bGVzaGVldCI+CiAgCiAgPGxpbmsgaHJlZj0iL3N0YXRpYy9jc3MvdW5pdF9kZXRhaWxzLmNzcz92ZXJzaW9uPTIwMjEtMDQtMjB0MTYtMTAtODkzY2MyYjcxYTVhZmUwOTdlOWI3ODY5OWNiOWNjNWQxOTZkMzAwMiIgcmVsPSJzdHlsZXNoZWV0Ij4KCiAgPGxpbmsgaHJlZj0iL3N0YXRpYy9jc3MvdW5pdF9vdXRsaW5lLmNzcz92ZXJzaW9uPTIwMjEtMDQtMjB0MTYtMTAtODkzY2MyYjcxYTVhZmUwOTdlOWI3ODY5OWNiOWNjNWQxOTZkMzAwMiIgcmVsPSJzdHlsZXNoZWV0Ij4KCjxib2R5IGNsYXNzPSJTaXRlIFNpdGUtLXdpZGUgU2l0ZS0tcmVkZXNpZ24iPgo8aGVhZGVyIGNsYXNzPSJTaXRlLWhlYWRlciBTaXRlLWhlYWRlci0tZGFyayI+CiAgPGRpdiBjbGFzcz0iQmFubmVyIj4KICAgIDxkaXYgY2xhc3M9IkJhbm5lci1pbm5lciI+CiAgICAgIDxkaXYgY2xhc3M9IkJhbm5lci1tZXNzYWdlIj5CbGFjayBMaXZlcyBNYXR0ZXI8L2Rpdj4KICAgICAgPGEgY2xhc3M9IkJhbm5lci1hY3Rpb24iCiAgICAgICAgIGhyZWY9Imh0dHBzOi8vc3VwcG9ydC5lamkub3JnL2dpdmUvMTUzNDEzLyMhL2RvbmF0aW9uL2NoZWNrb3V0IgogICAgICAgICB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgcmVsPSJub29wZW5lciI+U3VwcG9ydCB0aGUgRXF1YWwgSnVzdGljZSBJbml0aWF0aXZlPC9hPgogICAgPC9kaXY+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0iSGVhZGVyIj4KICAgIDxuYXYgY2xhc3M9IkhlYWRlci1uYXYiPgogICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi8iIGNsYXNzPSJIZWFkZXItbG9nb0xpbmsiPgogICAgICAgIDxpbWcgY2xhc3M9IkhlYWRlci1sb2dvIiBzcmM9Ii9zdGF0aWMvaW1nL2dvLWxvZ28td2hpdGUuc3ZnIiBhbHQ9IkxpbmsgdG8gR28gaG9tZXBhZ2UiPgogICAgICA8L2E+CiAgICAgIAogIDxmb3JtIGNsYXNzPSJIZWFkZXItc2VhcmNoRm9ybSIgYWN0aW9uPSIvc2VhcmNoIiByb2xlPSJzZWFyY2giPgogICAgPGJ1dHRvbiBjbGFzcz0iSGVhZGVyLXNlYXJjaEZvcm1TdWJtaXQiIGFyaWEtbGFiZWw9IlNlYXJjaCBmb3IgYSBwYWNrYWdlIj4KICAgICAgPHN2ZyBjbGFzcz0iSGVhZGVyLXNlYXJjaEZvcm1TdWJtaXRJY29uIiBmb2N1c2FibGU9ImZhbHNlIiB2aWV3Qm94PSIwIDAgMjQgMjQiIGFyaWEtaGlkZGVuPSJ0cnVlIiByb2xlPSJwcmVzZW50YXRpb24iPjxwYXRoIGQ9Ik0xNS41IDE0aC0uNzlsLS4yOC0uMjdDMTUuNDEgMTIuNTkgMTYgMTEuMTEgMTYgOS41IDE2IDUuOTEgMTMuMDkgMyA5LjUgM1MzIDUuOTEgMyA5LjUgNS45MSAxNiA5LjUgMTZjMS42MSAwIDMuMDktLjU5IDQuMjMtMS41N2wuMjcuMjh2Ljc5bDUgNC45OUwyMC40OSAxOWwtNC45OS01em0tNiAwQzcuMDEgMTQgNSAxMS45OSA1IDkuNVM3LjAxIDUgOS41IDUgMTQgNy4wMSAxNCA5LjUgMTEuOTkgMTQgOS41IDE0eiI+PC9wYXRoPjxwYXRoIGZpbGw9Im5vbmUiIGQ9Ik0wIDBoMjR2MjRIMHoiPjwvcGF0aD48L3N2Zz4KICAgIDwvYnV0dG9uPgogICAgPGlucHV0IGNsYXNzPSJIZWFkZXItc2VhcmNoRm9ybUlucHV0IGpzLXNlYXJjaEZvY3VzIgogICAgICBhcmlhLWxhYmVsPSJTZWFyY2ggZm9yIGEgcGFja2FnZSIKICAgICAgdHlwZT0idGV4dCIKICAgICAgbmFtZT0icSIKICAgICAgcGxhY2Vob2xkZXI9IlNlYXJjaCBmb3IgYSBwYWNrYWdlIgogICAgICBhdXRvY2FwaXRhbGl6ZT0ib2ZmIgogICAgICBhdXRvY29tcGxldGU9Im9mZiIKICAgICAgYXV0b2NvcnJlY3Q9Im9mZiIKICAgICAgc3BlbGxjaGVjaz0iZmFsc2UiCiAgICAgIHRpdGxlPSJTZWFyY2ggZm9yIGEgcGFja2FnZSIKICAgICAgdmFsdWU9IiIKICAgICAgPgogIDwvZm9ybT4KCiAgICAgIDx1bCBjbGFzcz0iSGVhZGVyLW1lbnUiPgogICAgICAgIDxsaSBjbGFzcz0iSGVhZGVyLW1lbnVJdGVtIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3NvbHV0aW9ucyIgdGl0bGU9IldoeSBHbyI+V2h5IEdvPC9hPgogICAgICAgIDwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJIZWFkZXItbWVudUl0ZW0iPgogICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9sZWFybi5nby5kZXYiIHRpdGxlPSJHZXR0aW5nIFN0YXJ0ZWQiPkdldHRpbmcgU3RhcnRlZDwvYT4KICAgICAgICA8L2xpPgogICAgICAgIDxsaSBjbGFzcz0iSGVhZGVyLW1lbnVJdGVtIEhlYWRlci1tZW51SXRlbS0tYWN0aXZlIj4KICAgICAgICAgIDxhIGhyZWY9Ii8iIHRpdGxlPSJEaXNjb3ZlciBQYWNrYWdlcyI+RGlzY292ZXIgUGFja2FnZXM8L2E+CiAgICAgICAgPC9saT4KICAgICAgICA8bGkgY2xhc3M9IkhlYWRlci1tZW51SXRlbSI+CiAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9hYm91dCIgdGl0bGU9IiI+QWJvdXQ8L2E+CiAgICAgICAgPC9saT4KICAgICAgPC91bD4KICAgICAgPGJ1dHRvbiBjbGFzcz0iSGVhZGVyLW5hdk9wZW4ganMtaGVhZGVyTWVudUJ1dHRvbiIgYXJpYS1sYWJlbD0iT3BlbiBuYXZpZ2F0aW9uLiI+CiAgICAgIDwvYnV0dG9uPgogICAgPC9uYXY+CiAgPC9kaXY+CjwvaGVhZGVyPgo8YXNpZGUgY2xhc3M9Ik5hdmlnYXRpb25EcmF3ZXIganMtaGVhZGVyIj4KICA8bmF2IGNsYXNzPSJOYXZpZ2F0aW9uRHJhd2VyLW5hdiI+CiAgICA8ZGl2IGNsYXNzPSJOYXZpZ2F0aW9uRHJhd2VyLWhlYWRlciI+CiAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2LyI+CiAgICAgICAgPGltZyBjbGFzcz0iTmF2aWdhdGlvbkRyYXdlci1sb2dvIiBzcmM9Ii9zdGF0aWMvaW1nL2dvLWxvZ28tYmx1ZS5zdmciIGFsdD0iR28uIj4KICAgICAgPC9hPgogICAgICA8YnV0dG9uIGNsYXNzPSJOYXZpZ2F0aW9uRHJhd2VyLWNsb3NlIGpzLWhlYWRlck1lbnVCdXR0b24iIGFyaWEtbGFiZWw9IkNsb3NlIG5hdmlnYXRpb24uIj4KICAgICAgPC9idXR0b24+CiAgICA8L2Rpdj4KICAgIDx1bCBjbGFzcz0iTmF2aWdhdGlvbkRyYXdlci1saXN0Ij4KICAgICAgPGxpIGNsYXNzPSJOYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9zb2x1dGlvbnMiIHRpdGxlPSJXaHkgR28iPldoeSBHbzwvYT4KICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPSJOYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICA8YSBocmVmPSJodHRwczovL2xlYXJuLmdvLmRldiIgdGl0bGU9IkdldHRpbmcgU3RhcnRlZCI+R2V0dGluZyBTdGFydGVkPC9hPgogICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9Ik5hdmlnYXRpb25EcmF3ZXItbGlzdEl0ZW0gTmF2aWdhdGlvbkRyYXdlci1saXN0SXRlbS0tYWN0aXZlIj4KICAgICAgICA8YSBocmVmPSIvIiB0aXRsZT0iRGlzY292ZXIgUGFja2FnZXMiPkRpc2NvdmVyIFBhY2thZ2VzPC9hPgogICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9Ik5hdmlnYXRpb25EcmF3ZXItbGlzdEl0ZW0iPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L2Fib3V0IiB0aXRsZT0iIj5BYm91dDwvYT4KICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPSJOYXZpZ2F0aW9uRHJhd2VyLWxpc3RJdGVtIj4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvbGFuZy5vcmciIHRpdGxlPSJnb2xhbmcub3JnIj5nb2xhbmcub3JnPC9hPgogICAgICA8L2xpPgogICAgPC91bD4KICA8L25hdj4KPC9hc2lkZT4KPGRpdiBjbGFzcz0iTmF2aWdhdGlvbkRyYXdlci1zY3JpbSBqcy1zY3JpbSIgcm9sZT0icHJlc2VudGF0aW9uIj4KPC9kaXY+CjxkaXYgY2xhc3M9IlNpdGUtY29udGVudCI+CiAgPGRpdiBjbGFzcz0iQ29udGFpbmVyIj4KICAgIAogIDxoZWFkZXIgY2xhc3M9ImpzLXVuaXRIZWFkZXIgVW5pdEhlYWRlciBVbml0SGVhZGVyLS1mdWxsIFVuaXRIZWFkZXItLW1haW4tLXBhY2thZ2UiIGFyaWEtbGFiZWw9InBhY2thZ2UgY3JvbiBpbmZvcm1hdGlvbiIgcm9sZT0iY29tcGxlbWVudGFyeSI+CiAgICA8ZGl2IGNsYXNzPSJqcy1oZWFkZXJTZW50aW5lbCI+PC9kaXY+CiAgICAKICA8ZGl2IGNsYXNzPSJVbml0SGVhZGVyLWJhbm5lcnMiPgogICAgCiAgICAKICAgIAogICAgCiAgICAgIDxkaXYgY2xhc3M9IlVuaXRIZWFkZXItYmFubmVyIFVuaXRIZWFkZXItYmFubmVyLS1tYWpvclZlcnNpb24iIGRhdGEtdGVzdC1pZD0iVW5pdEhlYWRlci1tYWpvclZlcnNpb25CYW5uZXIiPgogICAgICAgIDxzcGFuIGNsYXNzPSJTaXRlLW1hcmdpbiBVbml0SGVhZGVyLWJhbm5lckNvbnRlbnQiPgogICAgICAgICAgPGltZyBoZWlnaHQ9IjE5cHgiIHdpZHRoPSIxNnB4IiBjbGFzcz0iVW5pdEhlYWRlci1iYW5uZXItaWNvbiIgc3JjPSIvc3RhdGljL2ltZy9wa2ctaWNvbi1pbmZvXzE5eDE2LnN2ZyIgYWx0PSIiPgogICAgICAgICAgPHNwYW4+CiAgICAgICAgICAgIFRoZSBoaWdoZXN0IHRhZ2dlZCBtYWpvciB2ZXJzaW9uIGlzIDxhIGhyZWY9Ii9naXRodWIuY29tL3JvYmZpZy9jcm9uL3YzIj52MzwvYT4uCiAgICAgICAgICA8L3NwYW4+CiAgICAgICAgPC9zcGFuPgogICAgICA8L2Rpdj4KICAgIAogIDwvZGl2PgoKICAgIAogIDxkaXYgY2xhc3M9IlVuaXRIZWFkZXItYnJlYWRjcnVtYnMiIGRhdGEtdGVzdC1pZD0iVW5pdEhlYWRlci1icmVhZGNydW1iIj4KICAgIDxkaXYgY2xhc3M9IlNpdGUtbWFyZ2luIj4KICAgICAgCiAgICAgICAgCiAgICAgICAgICA8c3BhbiBjbGFzcz0iVW5pdEhlYWRlci1icmVhZGNydW1iSXRlbSIgZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLWJyZWFkY3J1bWJJdGVtIj4KICAgICAgICAgICAgPGEgaHJlZj0iLyI+RGlzY292ZXIgUGFja2FnZXM8L2E+CiAgICAgICAgICA8L3NwYW4+CiAgICAgICAgCiAgICAgICAgPHNwYW4gY2xhc3M9IlVuaXRIZWFkZXItYnJlYWRjcnVtYkl0ZW0iPgogICAgICAgICAgPHNwYW4gZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLWJyZWFkY3J1bWJDdXJyZW50Ij5naXRodWIuY29tL3JvYmZpZy9jcm9uPC9zcGFuPgogICAgICAgICAgCiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9IkNvcHlUb0NsaXBib2FyZEJ1dHRvbiBqcy1jb3B5VG9DbGlwYm9hcmQiCiAgICAgICAgICAgICAgICB0aXRsZT0iQ29weSBwYXRoIHRvIGNsaXBib2FyZC4mIzEwOyYjMTA7Z2l0aHViLmNvbS9yb2JmaWcvY3JvbiIKICAgICAgICAgICAgICAgIGRhdGEtdG8tY29weT0iZ2l0aHViLmNvbS9yb2JmaWcvY3JvbiI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iQ29weVRvQ2xpcGJvYXJkQnV0dG9uLWltYWdlIiBzcmM9Ii9zdGF0aWMvaW1nL2NvcHktY2xpY2suc3ZnIiBhbHQ9IiI+CiAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgCiAgICAgICAgPC9zcGFuPgogICAgICAKICAgIDwvZGl2PgogIDwvZGl2PgoKICAgIAogIDxkaXYgY2xhc3M9IlVuaXRIZWFkZXItY29udGVudCI+CiAgICA8ZGl2IGNsYXNzPSJTaXRlLW1hcmdpbiI+CiAgICAgIAogIDxkaXYgY2xhc3M9IlVuaXRIZWFkZXItdGl0bGUiPgogICAgPGRpdiBjbGFzcz0iVW5pdEhlYWRlci1sb2dvIj4KICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nby5kZXYvIiB0YWJpbmRleD0iLTEiPgogICAgICAgIDxpbWcgaGVpZ2h0PSI3MnB4IiB3aWR0aD0iNzJweCIgY2xhc3M9IlVuaXRIZWFkZXItbG9nbyIgc3JjPSIvc3RhdGljL2ltZy9nby1sb2dvLWJsdWUuc3ZnIiBhbHQ9IkdvIj4KICAgICAgPC9hPgogICAgPC9kaXY+CiAgICA8aDEgZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLXRpdGxlIj5jcm9uPC9oMT4KICAgIAogICAgICA8c3BhbiBjbGFzcz0iVW5pdEhlYWRlci1iYWRnZSI+cGFja2FnZTwvc3Bhbj4KICAgIAogICAgICA8c3BhbiBjbGFzcz0iVW5pdEhlYWRlci1iYWRnZSI+bW9kdWxlPC9zcGFuPgogICAgCiAgPC9kaXY+CgogICAgICAKICAgICAgICAKICAgICAgICAgIDxidXR0b24gY2xhc3M9IkNvcHlUb0NsaXBib2FyZEJ1dHRvbiBqcy1jb3B5VG9DbGlwYm9hcmQiCiAgICAgICAgICAgICAgdGl0bGU9IkNvcHkgcGF0aCB0byBjbGlwYm9hcmQuJiMxMDsmIzEwO2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24iCiAgICAgICAgICAgICAgZGF0YS10by1jb3B5PSJnaXRodWIuY29tL3JvYmZpZy9jcm9uIgogICAgICAgICAgICAgIHRhYmluZGV4PSItMSI+CiAgICAgICAgICAgIDxpbWcgY2xhc3M9IkNvcHlUb0NsaXBib2FyZEJ1dHRvbi1pbWFnZSIgc3JjPSIvc3RhdGljL2ltZy9jb3B5LWNsaWNrLnN2ZyIgYWx0PSIiPgogICAgICAgICAgPC9idXR0b24+CiAgICAgICAgCiAgICAgIAogICAgICA8ZGl2IHN0eWxlPSJmbGV4LWdyb3c6IDE7Ij48L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iVW5pdEhlYWRlci1kZXRhaWxzIj4KICAgICAgICAKICAgICAgICAgIAogIDxzcGFuIGNsYXNzPSJVbml0SGVhZGVyLWRldGFpbEl0ZW0iIGRhdGEtdGVzdC1pZD0iVW5pdEhlYWRlci12ZXJzaW9uIj4KICAgIDxhIGhyZWY9Ij90YWI9dmVyc2lvbnMiPjxzcGFuPlZlcnNpb246IDwvc3Bhbj52MS4yLjA8L2E+CiAgICAKICAgIDxkaXYgY2xhc3M9IkRldGFpbHNIZWFkZXItYmFkZ2UgRGV0YWlsc0hlYWRlci1iYWRnZS0tbGF0ZXN0IgogICAgICAgIGRhdGEtdGVzdC1pZD0iVW5pdEhlYWRlci1taW5vclZlcnNpb25CYW5uZXIiCiAgICAgICAgZGF0YS12ZXJzaW9uPSJ2MS4yLjAiCiAgICAgICAgZGF0YS1tcGF0aD0iZ2l0aHViLmNvbS9yb2JmaWcvY3JvbiIKICAgICAgICBkYXRhLXBwYXRoPSJnaXRodWIuY29tL3JvYmZpZy9jcm9uIgogICAgICAgIGRhdGEtcGFnZXR5cGU9InBhY2thZ2UiPgogICAgICA8c3BhbiBjbGFzcz0iRGV0YWlsc0hlYWRlci1zcGFuLS1sYXRlc3QiPkxhdGVzdDwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9IkRldGFpbHNIZWFkZXItc3Bhbi0tbm90QXRMYXRlc3QiPgogICAgICAgIExhdGVzdAogICAgICAgIAogIDxzcGFuIGNsYXNzPSJVbml0TWV0YURldGFpbHMtdG9nZ2xldGlwIj4KICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBhcmlhLWxhYmVsPSJtb3JlIGluZm8iIGRhdGEtdG9nZ2xldGlwLWNvbnRlbnQ9IlRoaXMgcGFja2FnZSBpcyBub3QgaW4gdGhlIGxhdGVzdCB2ZXJzaW9uIG9mIGl0cyBtb2R1bGUuIj4KICAgICAgPGltZyBzcmM9Ii9zdGF0aWMvaW1nL3NldmVyaXR5LnN2ZyIgYWx0PSIiIGhlaWdodD0iMTQiIHdpZHRoPSIxNSI+CiAgICA8L2J1dHRvbj4KICAgIDxzcGFuIHJvbGU9InN0YXR1cyI+PC9zcGFuPgogIDwvc3Bhbj4KCiAgICAgIDwvc3Bhbj4KICAgICAgPGEgaHJlZj0iL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24iPkdvIHRvIGxhdGVzdDwvYT4KICAgIDwvZGl2PgogIDwvc3Bhbj4KCiAgICAgICAgICAKICA8c3BhbiBjbGFzcz0iVW5pdEhlYWRlci1kZXRhaWxJdGVtIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItY29tbWl0VGltZSI+CiAgICBQdWJsaXNoZWQ6IE1heSAgNSwgMjAxOAogIDwvc3Bhbj4KCiAgICAgICAgICAKICA8c3BhbiBjbGFzcz0iVW5pdEhlYWRlci1kZXRhaWxJdGVtIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItbGljZW5zZXMiPgogICAgTGljZW5zZTogPGEgaHJlZj0iL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24/dGFiPWxpY2Vuc2VzIiBkYXRhLXRlc3QtaWQ9IlVuaXRIZWFkZXItbGljZW5zZSI+TUlUPC9hPgogICAgICAKICAgIAogIDwvc3Bhbj4KCiAgICAgICAgICAKICAgICAgICAgICAgCiAgPHNwYW4gY2xhc3M9IlVuaXRIZWFkZXItZGV0YWlsSXRlbSIgZGF0YS10ZXN0LWlkPSJVbml0SGVhZGVyLWltcG9ydHMiPgogICAgPGEgaHJlZj0iL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24/dGFiPWltcG9ydHMiPgogICAgICA8c3Bhbj5JbXBvcnRzOiA8L3NwYW4+OAogICAgPC9hPgogIDwvc3Bhbj4KCiAgICAgICAgICAgIAogIDxzcGFuIGNsYXNzPSJVbml0SGVhZGVyLWRldGFpbEl0ZW0iIGRhdGEtdGVzdC1pZD0iVW5pdEhlYWRlci1pbXBvcnRlZGJ5Ij4KICAgIDxhIGhyZWY9Ii9naXRodWIuY29tL3JvYmZpZy9jcm9uP3RhYj1pbXBvcnRlZGJ5Ij4KICAgICAgIDxzcGFuPkltcG9ydGVkIGJ5OiA8L3NwYW4+MTUwOQogICAgPC9hPgogIDwvc3Bhbj4KCiAgICAgICAgICAKICAgICAgICAKICAgICAgPC9kaXY+CiAgICAgIAogIDxkaXYgY2xhc3M9IlVuaXRIZWFkZXItb3ZlcmZsb3dDb250YWluZXIiPgogICAgPHN2ZyBjbGFzcz0iVW5pdEhlYWRlci1vdmVyZmxvd0ltYWdlIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMjQiIHZpZXdCb3g9IjAgMCAyNCAyNCIgd2lkdGg9IjI0Ij4KICAgICAgPHBhdGggZD0iTTAgMGgyNHYyNEgweiIgZmlsbD0ibm9uZSIvPgogICAgICA8cGF0aCBkPSJNMTIgOGMxLjEgMCAyLS45IDItMnMtLjktMi0yLTItMiAuOS0yIDIgLjkgMiAyIDJ6bTAgMmMtMS4xIDAtMiAuOS0yIDJzLjkgMiAyIDIgMi0uOSAyLTItLjktMi0yLTJ6bTAgNmMtMS4xIDAtMiAuOS0yIDJzLjkgMiAyIDIgMi0uOSAyLTItLjktMi0yLTJ6Ii8+CiAgICA8L3N2Zz4KICAgIDxzZWxlY3QgY2xhc3M9IlVuaXRIZWFkZXItb3ZlcmZsb3dTZWxlY3QganMtb3ZlcmZsb3dTZWxlY3QiIHRhYmluZGV4PSItMSI+CiAgICAgIDxvcHRpb24+TWFpbjwvb3B0aW9uPgogICAgICA8b3B0aW9uIHZhbHVlPSIvZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbj90YWI9dmVyc2lvbnMiPgogICAgICAgIFZlcnNpb25zCiAgICAgIDwvb3B0aW9uPgogICAgICA8b3B0aW9uIHZhbHVlPSIvZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbj90YWI9bGljZW5zZXMiPgogICAgICAgIExpY2Vuc2VzCiAgICAgIDwvb3B0aW9uPgogICAgICAKICAgICAgICA8b3B0aW9uIHZhbHVlPSIvZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbj90YWI9aW1wb3J0cyI+CiAgICAgICAgICBJbXBvcnRzCiAgICAgICAgPC9vcHRpb24+CiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24/dGFiPWltcG9ydGVkYnkiPgogICAgICAgICAgSW1wb3J0ZWQgQnkKICAgICAgICA8L29wdGlvbj4KICAgICAgCiAgICA8L3NlbGVjdD4KICA8L2Rpdj4KCiAgICA8L2Rpdj4KICA8L2Rpdj4KCiAgPC9oZWFkZXI+CgogICAgCiAgPGRpdiBjbGFzcz0iVW5pdERldGFpbHMiIGRhdGEtdGVzdC1pZD0iVW5pdERldGFpbHMiPgogICAgCiAgPG5hdiBjbGFzcz0iRG9jTmF2TW9iaWxlIGpzLW1vYmlsZU5hdiI+CiAgICA8bGFiZWwgZm9yPSJEb2NOYXZNb2JpbGUtc2VsZWN0IiBjbGFzcz0iRG9jTmF2TW9iaWxlLWxhYmVsIj4KICAgICAgPHN2ZyBjbGFzcz0iRG9jTmF2TW9iaWxlLXNlbGVjdEljb24iIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgdmlld0JveD0iMCAwIDI0IDI0IiBmaWxsPSJibGFjayIgd2lkdGg9IjE4cHgiIGhlaWdodD0iMThweCI+CiAgICAgICAgPHBhdGggZD0iTTAgMGgyNHYyNEgweiIgZmlsbD0ibm9uZSIvPjxwYXRoIGQ9Ik0zIDloMTRWN0gzdjJ6bTAgNGgxNHYtMkgzdjJ6bTAgNGgxNHYtMkgzdjJ6bTE2IDBoMnYtMmgtMnYyem0wLTEwdjJoMlY3aC0yem0wIDZoMnYtMmgtMnYyeiIvPgogICAgICA8L3N2Zz4KICAgICAgPHNwYW4gY2xhc3M9IkRvY05hdk1vYmlsZS1zZWxlY3RUZXh0IGpzLW1vYmlsZU5hdlNlbGVjdFRleHQiPk91dGxpbmU8L3NwYW4+CiAgICA8L2xhYmVsPgogICAgPHNlbGVjdCBpZD0iRG9jTmF2TW9iaWxlLXNlbGVjdCIgY2xhc3M9IkRvY05hdk1vYmlsZS1zZWxlY3QiPgogICAgICA8b3B0aW9uIHZhbHVlPSIiPk91dGxpbmU8L29wdGlvbj4KICAgICAgPG9wdGdyb3VwIGxhYmVsPSJSRUFETUUiPgogICAgICAgIDxvcHRpb24gdmFsdWU9InJlYWRtZS1jcm9uIj5jcm9uPC9vcHRpb24+CiAgICAgIDwvb3B0Z3JvdXA+CiAgICAgIAoKPG9wdGdyb3VwIGxhYmVsPSJEb2N1bWVudGF0aW9uIj4KICAKICAgIDxvcHRpb24gdmFsdWU9InBrZy1vdmVydmlldyI+T3ZlcnZpZXc8L29wdGlvbj4KICAKICAKICAgIDxvcHRpb24gdmFsdWU9InBrZy1pbmRleCI+SW5kZXg8L29wdGlvbj4KICAKICAKICAKICAKPC9vcHRncm91cD4KCgogIDxvcHRncm91cCBsYWJlbD0iVHlwZXMiPgogICAgCiAgICAgIAogICAgICA8b3B0aW9uIHZhbHVlPSJDb25zdGFudERlbGF5U2NoZWR1bGUiPnR5cGUgQ29uc3RhbnREZWxheVNjaGVkdWxlPC9vcHRpb24+CiAgICAgIAogICAgICAgIDxvcHRpb24gdmFsdWU9IkV2ZXJ5Ij5FdmVyeShkdXJhdGlvbik8L29wdGlvbj4KICAgICAgCiAgICAgIAogICAgICAgIDxvcHRpb24gdmFsdWU9IkNvbnN0YW50RGVsYXlTY2hlZHVsZS5OZXh0Ij4oc2NoZWR1bGUpIE5leHQodCk8L29wdGlvbj4KICAgICAgCiAgICAKICAgICAgCiAgICAgIDxvcHRpb24gdmFsdWU9IkNyb24iPnR5cGUgQ3Jvbjwvb3B0aW9uPgogICAgICAKICAgICAgICA8b3B0aW9uIHZhbHVlPSJOZXciPk5ldygpPC9vcHRpb24+CiAgICAgIAogICAgICAgIDxvcHRpb24gdmFsdWU9Ik5ld1dpdGhMb2NhdGlvbiI+TmV3V2l0aExvY2F0aW9uKGxvY2F0aW9uKTwvb3B0aW9uPgogICAgICAKICAgICAgCiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iQ3Jvbi5BZGRGdW5jIj4oYykgQWRkRnVuYyhzcGVjLCBjbWQpPC9vcHRpb24+CiAgICAgIAogICAgICAgIDxvcHRpb24gdmFsdWU9IkNyb24uQWRkSm9iIj4oYykgQWRkSm9iKHNwZWMsIGNtZCk8L29wdGlvbj4KICAgICAgCiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iQ3Jvbi5FbnRyaWVzIj4oYykgRW50cmllcygpPC9vcHRpb24+CiAgICAgIAogICAgICAgIDxvcHRpb24gdmFsdWU9IkNyb24uTG9jYXRpb24iPihjKSBMb2NhdGlvbigpPC9vcHRpb24+CiAgICAgIAogICAgICAgIDxvcHRpb24gdmFsdWU9IkNyb24uUnVuIj4oYykgUnVuKCk8L29wdGlvbj4KICAgICAgCiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iQ3Jvbi5TY2hlZHVsZSI+KGMpIFNjaGVkdWxlKHNjaGVkdWxlLCBjbWQpPC9vcHRpb24+CiAgICAgIAogICAgICAgIDxvcHRpb24gdmFsdWU9IkNyb24uU3RhcnQiPihjKSBTdGFydCgpPC9vcHRpb24+CiAgICAgIAogICAgICAgIDxvcHRpb24gdmFsdWU9IkNyb24uU3RvcCI+KGMpIFN0b3AoKTwvb3B0aW9uPgogICAgICAKICAgIAogICAgICAKICAgICAgPG9wdGlvbiB2YWx1ZT0iRW50cnkiPnR5cGUgRW50cnk8L29wdGlvbj4KICAgICAgCiAgICAgIAogICAgCiAgICAgIAogICAgICA8b3B0aW9uIHZhbHVlPSJGdW5jSm9iIj50eXBlIEZ1bmNKb2I8L29wdGlvbj4KICAgICAgCiAgICAgIAogICAgICAgIDxvcHRpb24gdmFsdWU9IkZ1bmNKb2IuUnVuIj4oZikgUnVuKCk8L29wdGlvbj4KICAgICAgCiAgICAKICAgICAgCiAgICAgIDxvcHRpb24gdmFsdWU9IkpvYiI+dHlwZSBKb2I8L29wdGlvbj4KICAgICAgCiAgICAgIAogICAgCiAgICAgIAogICAgICA8b3B0aW9uIHZhbHVlPSJQYXJzZU9wdGlvbiI+dHlwZSBQYXJzZU9wdGlvbjwvb3B0aW9uPgogICAgICAKICAgICAgCiAgICAKICAgICAgCiAgICAgIDxvcHRpb24gdmFsdWU9IlBhcnNlciI+dHlwZSBQYXJzZXI8L29wdGlvbj4KICAgICAgCiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iTmV3UGFyc2VyIj5OZXdQYXJzZXIob3B0aW9ucyk8L29wdGlvbj4KICAgICAgCiAgICAgIAogICAgICAgIDxvcHRpb24gdmFsdWU9IlBhcnNlci5QYXJzZSI+KHApIFBhcnNlKHNwZWMpPC9vcHRpb24+CiAgICAgIAogICAgCiAgICAgIAogICAgICA8b3B0aW9uIHZhbHVlPSJTY2hlZHVsZSI+dHlwZSBTY2hlZHVsZTwvb3B0aW9uPgogICAgICAKICAgICAgICA8b3B0aW9uIHZhbHVlPSJQYXJzZSI+UGFyc2Uoc3BlYyk8L29wdGlvbj4KICAgICAgCiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iUGFyc2VTdGFuZGFyZCI+UGFyc2VTdGFuZGFyZChzdGFuZGFyZFNwZWMpPC9vcHRpb24+CiAgICAgIAogICAgICAKICAgIAogICAgICAKICAgICAgPG9wdGlvbiB2YWx1ZT0iU3BlY1NjaGVkdWxlIj50eXBlIFNwZWNTY2hlZHVsZTwvb3B0aW9uPgogICAgICAKICAgICAgCiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iU3BlY1NjaGVkdWxlLk5leHQiPihzKSBOZXh0KHQpPC9vcHRpb24+CiAgICAgIAogICAgIAogIDwvb3B0Z3JvdXA+CgoKCiAgICAgIDxvcHRpb24gY2xhc3M9ImpzLXNvdXJjZWZpbGVzT3B0aW9uIiB2YWx1ZT0ic2VjdGlvbi1zb3VyY2VmaWxlcyI+U291cmNlIEZpbGVzPC9vcHRpb24+CiAgICAgIDxvcHRpb24gY2xhc3M9ImpzLWRpcmVjdG9yaWVzT3B0aW9uIiB2YWx1ZT0ic2VjdGlvbi1kaXJlY3RvcmllcyI+RGlyZWN0b3JpZXM8L29wdGlvbj4KICAgIDwvc2VsZWN0PgogIDwvbmF2PgoKICAgIDxkaXYgY2xhc3M9IlVuaXREZXRhaWxzLW91dGxpbmUiIHJvbGU9Im5hdmlnYXRpb24iCiAgICAgICAgYXJpYS1sYWJlbD0icGFja2FnZWRldGFpbHMgbmF2aWdhdGlvbiI+CiAgICAgIAogIDxkaXYgY2xhc3M9IlVuaXRPdXRsaW5lIj4KICAgIDxkaXYgY2xhc3M9IlVuaXRPdXRsaW5lLWp1bXBUbyI+CiAgICAgIDxidXR0b24gY2xhc3M9IlVuaXRPdXRsaW5lLWp1bXBUb0lucHV0IGpzLWp1bXBUb0lucHV0Ij4KICAgICAgICBKdW1wIHRvIC4uLgogICAgICA8L2J1dHRvbj4KICAgIDwvZGl2PgogICAgPHVsIGNsYXNzPSJqcy10cmVlIiByb2xlPSJ0cmVlIiBhcmlhLWxhYmVsPSJPdXRsaW5lIj4KICAgICAgCiAgICAgICAgPGxpIHJvbGU9Im5vbmUiIGNsYXNzPSJqcy1yZWFkbWVPdXRsaW5lIj4KICAgICAgICAgIDxhIGhyZWY9IiNzZWN0aW9uLXJlYWRtZSIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIiBhcmlhLXNlbGVjdGVkPSJmYWxzZSIKICAgICAgICAgICAgICBhcmlhLWxldmVsPSIxIiBhcmlhLW93bnM9InJlYWRtZS1vdXRsaW5lIiB0YWJpbmRleD0iMCI+CiAgICAgICAgICAgIFJFQURNRQogICAgICAgICAgPC9hPgogICAgICAgICAgCiAgPHVsIHJvbGU9Imdyb3VwIiBpZD0icmVhZG1lLW91dGxpbmUiPgogICAgCiAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICA8YSBocmVmPSIjcmVhZG1lLWNyb24iIHJvbGU9InRyZWVpdGVtIiBhcmlhLWxldmVsPSIyIiBhcmlhLW93bnM9Im5hdi1ncm91cC1yZWFkbWUiCiAgICAgICAgICAgIHRhYmluZGV4PSItMSIgPgogICAgICAgICAgY3JvbgogICAgICAgIDwvYT4KICAgICAgICA8dWwgcm9sZT0iZ3JvdXAiIGlkPSJuYXYtZ3JvdXAtcmVhZG1lIj4KICAgICAgICAgICAKICAgICAgICA8L3VsPgogICAgICA8L2xpPgogICAgCiAgPC91bD4KCiAgICAgICAgPC9saT4KICAgICAgCiAgICAgIAogICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgIDxhIGhyZWY9IiNzZWN0aW9uLWRvY3VtZW50YXRpb24iIHJvbGU9InRyZWVpdGVtIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSIgYXJpYS1sZXZlbD0iMSIKICAgICAgICAgICAgICBhcmlhLXNlbGVjdGVkPSJmYWxzZSJhcmlhLW93bnM9ImRvYy1vdXRsaW5lIiB0YWJpbmRleD0iLTEiPgogICAgICAgICAgICBEb2N1bWVudGF0aW9uCiAgICAgICAgICA8L2E+CiAgICAgICAgICAKPHVsIHJvbGU9Imdyb3VwIiBpZD0iZG9jLW91dGxpbmUiPgogIAogICAgPGxpIHJvbGU9Im5vbmUiPgogICAgICA8YSBocmVmPSIjcGtnLW92ZXJ2aWV3IiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iMiIgdGFiaW5kZXg9Ii0xIj5PdmVydmlldzwvYT4KICAgIDwvbGk+CiAgPGxpIGNsYXNzPSJEb2NOYXYtb3ZlcnZpZXciIHJvbGU9Im5vbmUiPgogICAgICA8YSBocmVmPSIjcGtnLWluZGV4IiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iMiIgdGFiaW5kZXg9Ii0xIiBhcmlhLW93bnM9Im5hdi1ncm91cC1pbmRleCIKICAgICAgICAgID4KICAgICAgICBJbmRleAogICAgICA8L2E+CiAgICAgIAogICAgPC9saT4KICAgIDxsaSBjbGFzcz0iRG9jTmF2LWNvbnN0YW50cyIgcm9sZT0ibm9uZSI+CiAgICAgIDxhIGhyZWY9IiNwa2ctY29uc3RhbnRzIiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iMiIgdGFiaW5kZXg9Ii0xIj5Db25zdGFudHM8L2E+CiAgICA8L2xpPgogICAgPGxpIGNsYXNzPSJEb2NOYXYtdmFyaWFibGVzIiByb2xlPSJub25lIj4KICAgICAgPGEgaHJlZj0iI3BrZy12YXJpYWJsZXMiIHJvbGU9InRyZWVpdGVtIiBhcmlhLWxldmVsPSIyIiB0YWJpbmRleD0iLTEiPlZhcmlhYmxlczwvYT4KICAgIDwvbGk+CiAgICA8bGkgY2xhc3M9IkRvY05hdi1mdW5jdGlvbnMiIHJvbGU9Im5vbmUiPgogICAgICA8YSBocmVmPSIjcGtnLWZ1bmN0aW9ucyIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtbGV2ZWw9IjIiIHRhYmluZGV4PSItMSIgYXJpYS1vd25zPSJuYXYtZ3JvdXAtZnVuY3Rpb25zIgogICAgICAgICAgID4KICAgICAgICBGdW5jdGlvbnMKICAgICAgPC9hPgogICAgICA8dWwgcm9sZT0iZ3JvdXAiIGlkPSJuYXYtZ3JvdXAtZnVuY3Rpb25zIj4KICAgICAgICAKICAgICAgPC91bD4KICAgIDwvbGk+CiAgICA8bGkgY2xhc3M9IkRvY05hdi10eXBlcyIgcm9sZT0ibm9uZSI+CiAgICAgIDxhIGhyZWY9IiNwa2ctdHlwZXMiIHJvbGU9InRyZWVpdGVtIiBhcmlhLWxldmVsPSIyIiB0YWJpbmRleD0iLTEiIGFyaWEtb3ducz0ibmF2LWdyb3VwLXR5cGVzIgogICAgICAgICAgIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICBUeXBlcwogICAgICA8L2E+CiAgICAgIDx1bCByb2xlPSJncm91cCIgaWQ9Im5hdi1ncm91cC10eXBlcyI+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGEgaHJlZj0iI0NvbnN0YW50RGVsYXlTY2hlZHVsZSIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIiBhcmlhLWxldmVsPSIzIiB0YWJpbmRleD0iLTEiCiAgICAgICAgICAgICAgICAgICBkYXRhLWFyaWEtb3ducz0ibmF2Lmdyb3VwLkNvbnN0YW50RGVsYXlTY2hlZHVsZSI+CiAgICAgICAgICAgICAgICB0eXBlIENvbnN0YW50RGVsYXlTY2hlZHVsZQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICA8dWwgcm9sZT0iZ3JvdXAiIGlkPSJuYXYuZ3JvdXAuQ29uc3RhbnREZWxheVNjaGVkdWxlIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0V2ZXJ5IiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iNCIgdGFiaW5kZXg9Ii0xIgogICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iRXZlcnkoZHVyYXRpb24pIj4KICAgICAgICAgICAgICAgICAgICAgIEV2ZXJ5KGR1cmF0aW9uKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjQ29uc3RhbnREZWxheVNjaGVkdWxlLk5leHQiIHJvbGU9InRyZWVpdGVtIiBhcmlhLWxldmVsPSI0IiB0YWJpbmRleD0iLTEiCiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSIoc2NoZWR1bGUpIE5leHQodCkiPgogICAgICAgICAgICAgICAgICAgICAgKHNjaGVkdWxlKSBOZXh0KHQpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpIHJvbGU9Im5vbmUiPgogICAgICAgICAgICAKICAgICAgICAgICAgICAKICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8YSBocmVmPSIjQ3JvbiIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIiBhcmlhLWxldmVsPSIzIiB0YWJpbmRleD0iLTEiCiAgICAgICAgICAgICAgICAgICBkYXRhLWFyaWEtb3ducz0ibmF2Lmdyb3VwLkNyb24iPgogICAgICAgICAgICAgICAgdHlwZSBDcm9uCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgIDx1bCByb2xlPSJncm91cCIgaWQ9Im5hdi5ncm91cC5Dcm9uIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI05ldyIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtbGV2ZWw9IjQiIHRhYmluZGV4PSItMSIKICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9Ik5ldygpIj4KICAgICAgICAgICAgICAgICAgICAgIE5ldygpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTmV3V2l0aExvY2F0aW9uIiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iNCIgdGFiaW5kZXg9Ii0xIgogICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iTmV3V2l0aExvY2F0aW9uKGxvY2F0aW9uKSI+CiAgICAgICAgICAgICAgICAgICAgICBOZXdXaXRoTG9jYXRpb24obG9jYXRpb24pCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpIHJvbGU9Im5vbmUiPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNDcm9uLkFkZEZ1bmMiIHJvbGU9InRyZWVpdGVtIiBhcmlhLWxldmVsPSI0IiB0YWJpbmRleD0iLTEiCiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSIoYykgQWRkRnVuYyhzcGVjLCBjbWQpIj4KICAgICAgICAgICAgICAgICAgICAgIChjKSBBZGRGdW5jKHNwZWMsIGNtZCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpIHJvbGU9Im5vbmUiPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNDcm9uLkFkZEpvYiIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtbGV2ZWw9IjQiIHRhYmluZGV4PSItMSIKICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9IihjKSBBZGRKb2Ioc3BlYywgY21kKSI+CiAgICAgICAgICAgICAgICAgICAgICAoYykgQWRkSm9iKHNwZWMsIGNtZCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpIHJvbGU9Im5vbmUiPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNDcm9uLkVudHJpZXMiIHJvbGU9InRyZWVpdGVtIiBhcmlhLWxldmVsPSI0IiB0YWJpbmRleD0iLTEiCiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSIoYykgRW50cmllcygpIj4KICAgICAgICAgICAgICAgICAgICAgIChjKSBFbnRyaWVzKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpIHJvbGU9Im5vbmUiPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNDcm9uLkxvY2F0aW9uIiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iNCIgdGFiaW5kZXg9Ii0xIgogICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iKGMpIExvY2F0aW9uKCkiPgogICAgICAgICAgICAgICAgICAgICAgKGMpIExvY2F0aW9uKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpIHJvbGU9Im5vbmUiPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNDcm9uLlJ1biIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtbGV2ZWw9IjQiIHRhYmluZGV4PSItMSIKICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9IihjKSBSdW4oKSI+CiAgICAgICAgICAgICAgICAgICAgICAoYykgUnVuKCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGxpIHJvbGU9Im5vbmUiPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNDcm9uLlNjaGVkdWxlIiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iNCIgdGFiaW5kZXg9Ii0xIgogICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iKGMpIFNjaGVkdWxlKHNjaGVkdWxlLCBjbWQpIj4KICAgICAgICAgICAgICAgICAgICAgIChjKSBTY2hlZHVsZShzY2hlZHVsZSwgY21kKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0Nyb24uU3RhcnQiIHJvbGU9InRyZWVpdGVtIiBhcmlhLWxldmVsPSI0IiB0YWJpbmRleD0iLTEiCiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSIoYykgU3RhcnQoKSI+CiAgICAgICAgICAgICAgICAgICAgICAoYykgU3RhcnQoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0Nyb24uU3RvcCIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtbGV2ZWw9IjQiIHRhYmluZGV4PSItMSIKICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9IihjKSBTdG9wKCkiPgogICAgICAgICAgICAgICAgICAgICAgKGMpIFN0b3AoKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGEgaHJlZj0iI0VudHJ5IiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iMyIgdGFiaW5kZXg9Ii0xIj4KICAgICAgICAgICAgICAgIHR5cGUgRW50cnkKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGEgaHJlZj0iI0Z1bmNKb2IiIHJvbGU9InRyZWVpdGVtIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSIgYXJpYS1sZXZlbD0iMyIgdGFiaW5kZXg9Ii0xIgogICAgICAgICAgICAgICAgICAgZGF0YS1hcmlhLW93bnM9Im5hdi5ncm91cC5GdW5jSm9iIj4KICAgICAgICAgICAgICAgIHR5cGUgRnVuY0pvYgogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICA8dWwgcm9sZT0iZ3JvdXAiIGlkPSJuYXYuZ3JvdXAuRnVuY0pvYiI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI0Z1bmNKb2IuUnVuIiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iNCIgdGFiaW5kZXg9Ii0xIgogICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iKGYpIFJ1bigpIj4KICAgICAgICAgICAgICAgICAgICAgIChmKSBSdW4oKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGEgaHJlZj0iI0pvYiIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtbGV2ZWw9IjMiIHRhYmluZGV4PSItMSI+CiAgICAgICAgICAgICAgICB0eXBlIEpvYgogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpIHJvbGU9Im5vbmUiPgogICAgICAgICAgICAKICAgICAgICAgICAgICA8YSBocmVmPSIjUGFyc2VPcHRpb24iIHJvbGU9InRyZWVpdGVtIiBhcmlhLWxldmVsPSIzIiB0YWJpbmRleD0iLTEiPgogICAgICAgICAgICAgICAgdHlwZSBQYXJzZU9wdGlvbgogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPGxpIHJvbGU9Im5vbmUiPgogICAgICAgICAgICAKICAgICAgICAgICAgICAKICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8YSBocmVmPSIjUGFyc2VyIiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiIGFyaWEtbGV2ZWw9IjMiIHRhYmluZGV4PSItMSIKICAgICAgICAgICAgICAgICAgIGRhdGEtYXJpYS1vd25zPSJuYXYuZ3JvdXAuUGFyc2VyIj4KICAgICAgICAgICAgICAgIHR5cGUgUGFyc2VyCiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgIDx1bCByb2xlPSJncm91cCIgaWQ9Im5hdi5ncm91cC5QYXJzZXIiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjTmV3UGFyc2VyIiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iNCIgdGFiaW5kZXg9Ii0xIgogICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iTmV3UGFyc2VyKG9wdGlvbnMpIj4KICAgICAgICAgICAgICAgICAgICAgIE5ld1BhcnNlcihvcHRpb25zKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjUGFyc2VyLlBhcnNlIiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iNCIgdGFiaW5kZXg9Ii0xIgogICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iKHApIFBhcnNlKHNwZWMpIj4KICAgICAgICAgICAgICAgICAgICAgIChwKSBQYXJzZShzcGVjKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGEgaHJlZj0iI1NjaGVkdWxlIiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiIGFyaWEtbGV2ZWw9IjMiIHRhYmluZGV4PSItMSIKICAgICAgICAgICAgICAgICAgIGRhdGEtYXJpYS1vd25zPSJuYXYuZ3JvdXAuU2NoZWR1bGUiPgogICAgICAgICAgICAgICAgdHlwZSBTY2hlZHVsZQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICA8dWwgcm9sZT0iZ3JvdXAiIGlkPSJuYXYuZ3JvdXAuU2NoZWR1bGUiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxsaSByb2xlPSJub25lIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjUGFyc2UiIHJvbGU9InRyZWVpdGVtIiBhcmlhLWxldmVsPSI0IiB0YWJpbmRleD0iLTEiCiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSJQYXJzZShzcGVjKSI+CiAgICAgICAgICAgICAgICAgICAgICBQYXJzZShzcGVjKQogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1BhcnNlU3RhbmRhcmQiIHJvbGU9InRyZWVpdGVtIiBhcmlhLWxldmVsPSI0IiB0YWJpbmRleD0iLTEiCiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSJQYXJzZVN0YW5kYXJkKHN0YW5kYXJkU3BlYykiPgogICAgICAgICAgICAgICAgICAgICAgUGFyc2VTdGFuZGFyZChzdGFuZGFyZFNwZWMpCiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIAogICAgICAgICAgICAgIAogICAgICAgICAgICAgIDxhIGhyZWY9IiNTcGVjU2NoZWR1bGUiIHJvbGU9InRyZWVpdGVtIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSIgYXJpYS1sZXZlbD0iMyIgdGFiaW5kZXg9Ii0xIgogICAgICAgICAgICAgICAgICAgZGF0YS1hcmlhLW93bnM9Im5hdi5ncm91cC5TcGVjU2NoZWR1bGUiPgogICAgICAgICAgICAgICAgdHlwZSBTcGVjU2NoZWR1bGUKICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgPHVsIHJvbGU9Imdyb3VwIiBpZD0ibmF2Lmdyb3VwLlNwZWNTY2hlZHVsZSI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI1NwZWNTY2hlZHVsZS5OZXh0IiByb2xlPSJ0cmVlaXRlbSIgYXJpYS1sZXZlbD0iNCIgdGFiaW5kZXg9Ii0xIgogICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iKHMpIE5leHQodCkiPgogICAgICAgICAgICAgICAgICAgICAgKHMpIE5leHQodCkKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgICAKICAgICAgPC91bD4KICAgIDwvbGk+CiAgCiAgCjwvdWw+CgogICAgICAgIDwvbGk+CiAgICAgIAogICAgICAKICAgICAgICA8bGkgcm9sZT0ibm9uZSI+CiAgICAgICAgICA8YSBocmVmPSIjc2VjdGlvbi1zb3VyY2VmaWxlcyIgcm9sZT0idHJlZWl0ZW0iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIgogICAgICAgICAgICAgIGFyaWEtc2VsZWN0ZWQ9ImZhbHNlIiBhcmlhLWxldmVsPSIxIiB0YWJpbmRleD0iLTEiPgogICAgICAgICAgICBTb3VyY2UgRmlsZXMKICAgICAgICAgIDwvYT4KICAgICAgICA8L2xpPgogICAgICAKICAgICAgCiAgICA8L3VsPgogIDwvZGl2PgoKICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iVW5pdERldGFpbHMtY29udGVudCBqcy11bml0RGV0YWlsc0NvbnRlbnQiIHJvbGU9Im1haW4iIGRhdGEtdGVzdC1pZD0iVW5pdERldGFpbHMtY29udGVudCI+CiAgICAgIAogICAgICAgIAogIDxkaXYgY2xhc3M9IlVuaXRSZWFkbWUgIGpzLXJlYWRtZSI+CiAgICA8aDIgY2xhc3M9IlVuaXRSZWFkbWUtdGl0bGUiIGlkPSJzZWN0aW9uLXJlYWRtZSI+CiAgICAgIDxpbWcgaGVpZ2h0PSIyNXB4IiB3aWR0aD0iMjBweCIgc3JjPSIvc3RhdGljL2ltZy9wa2ctaWNvbi1yZWFkbWVfMjB4MTYuc3ZnIiBhbHQ9IiI+UkVBRE1FCiAgICAgIDxhIGNsYXNzPSJVbml0UmVhZG1lLWlkTGluayIgaHJlZj0iI3NlY3Rpb24tcmVhZG1lIj7CtjwvYT4KICAgIDwvaDI+CiAgICAKICAgICAgPGRpdiBjbGFzcz0iVW5pdFJlYWRtZS1jb250ZW50IiBkYXRhLXRlc3QtaWQ9IlVuaXQtcmVhZG1lQ29udGVudCI+CiAgICAgICAgPGRpdiBjbGFzcz0iT3ZlcnZpZXctcmVhZG1lQ29udGVudCBqcy1yZWFkbWVDb250ZW50Ij48cD48YSBocmVmPSJodHRwOi8vZ29kb2Mub3JnL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24iIHJlbD0ibm9mb2xsb3ciPjxpbWcgc3JjPSJodHRwOi8vZ29kb2Mub3JnL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24/c3RhdHVzLnBuZyIgYWx0PSJHb0RvYyIvPjwvYT4KPGEgaHJlZj0iaHR0cHM6Ly90cmF2aXMtY2kub3JnL3JvYmZpZy9jcm9uIiByZWw9Im5vZm9sbG93Ij48aW1nIHNyYz0iaHR0cHM6Ly90cmF2aXMtY2kub3JnL3JvYmZpZy9jcm9uLnN2Zz9icmFuY2g9bWFzdGVyIiBhbHQ9IkJ1aWxkIFN0YXR1cyIvPjwvYT48L3A+CjxoMyBjbGFzcz0iaDEiIGlkPSJyZWFkbWUtY3JvbiI+Y3JvbjwvaDM+CjxwPkRvY3VtZW50YXRpb24gaGVyZTogPGEgaHJlZj0iaHR0cHM6Ly9nb2RvYy5vcmcvZ2l0aHViLmNvbS9yb2JmaWcvY3JvbiIgcmVsPSJub2ZvbGxvdyI+aHR0cHM6Ly9nb2RvYy5vcmcvZ2l0aHViLmNvbS9yb2JmaWcvY3JvbjwvYT48L3A+CjwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9IlVuaXRSZWFkbWUtZmFkZU91dCI+PC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8YSBjbGFzcz0iVW5pdFJlYWRtZS1leHBhbmRMaW5rIGpzLXJlYWRtZUV4cGFuZCIgaHJlZj0iP3JlYWRtZT1leHBhbmRlZCNzZWN0aW9uLXJlYWRtZSI+RXhwYW5kIOKWvjwvYT4KICAgICAgPGEgY2xhc3M9IlVuaXRSZWFkbWUtY29sbGFwc2VMaW5rIGpzLXJlYWRtZUNvbGxhcHNlIiBocmVmPSIjIj5Db2xsYXBzZSDilrQ8L2E+CiAgICAKICA8L2Rpdj4KCiAgICAgIAoKICAgICAgCiAgICAgICAgCiAgICAgICAgICAKICA8ZGl2IGNsYXNzPSJVbml0RG9jIj4KICAgIDxoMiBjbGFzcz0iVW5pdERvYy10aXRsZSIgaWQ9InNlY3Rpb24tZG9jdW1lbnRhdGlvbiI+CiAgICAgIDxpbWcgaGVpZ2h0PSIyNXB4IiB3aWR0aD0iMjBweCIgc3JjPSIvc3RhdGljL2ltZy9wa2ctaWNvbi1kb2NfMjB4MTIuc3ZnIiBhbHQ9IiI+RG9jdW1lbnRhdGlvbgogICAgICA8YSBjbGFzcz0iVW5pdERvYy1pZExpbmsiIGhyZWY9IiNzZWN0aW9uLWRvY3VtZW50YXRpb24iPsK2PC9hPgogICAgPC9oMj4KICAgIAogIAogICAgCiAgCgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbiBqcy1kb2N1bWVudGF0aW9uIj4KICAgICAgCiAgICAgICAgCjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tY29udGVudCBqcy1kb2NDb250ZW50Ij4gPHNlY3Rpb24gY2xhc3M9IkRvY3VtZW50YXRpb24tb3ZlcnZpZXciPgogICAgPGgzIHRhYmluZGV4PSItMSIgaWQ9InBrZy1vdmVydmlldyIgY2xhc3M9IkRvY3VtZW50YXRpb24tb3ZlcnZpZXdIZWFkZXIiPk92ZXJ2aWV3IDxhIGhyZWY9IiNwa2ctb3ZlcnZpZXciPsK2PC9hPjwvaDM+Cgo8ZGl2IHJvbGU9Im5hdmlnYXRpb24iIGFyaWEtbGFiZWw9IlRhYmxlIG9mIENvbnRlbnRzIj4KCQk8dWwgY2xhc3M9IkRvY3VtZW50YXRpb24tdG9jIj48bGkgY2xhc3M9IkRvY3VtZW50YXRpb24tdG9jSXRlbSI+CgkJCQkJCTxhIGhyZWY9IiNoZHItVXNhZ2UiPlVzYWdlPC9hPgoJCQkJCTwvbGk+PGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvY0l0ZW0iPgoJCQkJCQk8YSBocmVmPSIjaGRyLUNST05fRXhwcmVzc2lvbl9Gb3JtYXQiPkNST04gRXhwcmVzc2lvbiBGb3JtYXQ8L2E+CgkJCQkJPC9saT48bGkgY2xhc3M9IkRvY3VtZW50YXRpb24tdG9jSXRlbSI+CgkJCQkJCTxhIGhyZWY9IiNoZHItU3BlY2lhbF9DaGFyYWN0ZXJzIj5TcGVjaWFsIENoYXJhY3RlcnM8L2E+CgkJCQkJPC9saT48bGkgY2xhc3M9IkRvY3VtZW50YXRpb24tdG9jSXRlbSI+CgkJCQkJCTxhIGhyZWY9IiNoZHItUHJlZGVmaW5lZF9zY2hlZHVsZXMiPlByZWRlZmluZWQgc2NoZWR1bGVzPC9hPgoJCQkJCTwvbGk+PGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvY0l0ZW0iPgoJCQkJCQk8YSBocmVmPSIjaGRyLUludGVydmFscyI+SW50ZXJ2YWxzPC9hPgoJCQkJCTwvbGk+PGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvY0l0ZW0iPgoJCQkJCQk8YSBocmVmPSIjaGRyLVRpbWVfem9uZXMiPlRpbWUgem9uZXM8L2E+CgkJCQkJPC9saT48bGkgY2xhc3M9IkRvY3VtZW50YXRpb24tdG9jSXRlbSI+CgkJCQkJCTxhIGhyZWY9IiNoZHItVGhyZWFkX3NhZmV0eSI+VGhyZWFkIHNhZmV0eTwvYT4KCQkJCQk8L2xpPjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2NJdGVtIj4KCQkJCQkJPGEgaHJlZj0iI2hkci1JbXBsZW1lbnRhdGlvbiI+SW1wbGVtZW50YXRpb248L2E+CgkJCQkJPC9saT48L3VsPgoJPC9kaXY+PHA+UGFja2FnZSBjcm9uIGltcGxlbWVudHMgYSBjcm9uIHNwZWMgcGFyc2VyIGFuZCBqb2IgcnVubmVyLgo8L3A+PGg0IGlkPSJoZHItVXNhZ2UiPlVzYWdlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI2hkci1Vc2FnZSI+wrY8L2E+PC9oND4KICA8cD5DYWxsZXJzIG1heSByZWdpc3RlciBGdW5jcyB0byBiZSBpbnZva2VkIG9uIGEgZ2l2ZW4gc2NoZWR1bGUuICBDcm9uIHdpbGwgcnVuCnRoZW0gaW4gdGhlaXIgb3duIGdvcm91dGluZXMuCjwvcD48cHJlPmMgOj0gY3Jvbi5OZXcoKQpjLkFkZEZ1bmMoJiMzNDswIDMwICogKiAqIComIzM0OywgZnVuYygpIHsgZm10LlByaW50bG4oJiMzNDtFdmVyeSBob3VyIG9uIHRoZSBoYWxmIGhvdXImIzM0OykgfSkKYy5BZGRGdW5jKCYjMzQ7QGhvdXJseSYjMzQ7LCAgICAgIGZ1bmMoKSB7IGZtdC5QcmludGxuKCYjMzQ7RXZlcnkgaG91ciYjMzQ7KSB9KQpjLkFkZEZ1bmMoJiMzNDtAZXZlcnkgMWgzMG0mIzM0OywgZnVuYygpIHsgZm10LlByaW50bG4oJiMzNDtFdmVyeSBob3VyIHRoaXJ0eSYjMzQ7KSB9KQpjLlN0YXJ0KCkKLi4KLy8gRnVuY3MgYXJlIGludm9rZWQgaW4gdGhlaXIgb3duIGdvcm91dGluZSwgYXN5bmNocm9ub3VzbHkuCi4uLgovLyBGdW5jcyBtYXkgYWxzbyBiZSBhZGRlZCB0byBhIHJ1bm5pbmcgQ3JvbgpjLkFkZEZ1bmMoJiMzNDtAZGFpbHkmIzM0OywgZnVuYygpIHsgZm10LlByaW50bG4oJiMzNDtFdmVyeSBkYXkmIzM0OykgfSkKLi4KLy8gSW5zcGVjdCB0aGUgY3JvbiBqb2IgZW50cmllcyYjMzk7IG5leHQgYW5kIHByZXZpb3VzIHJ1biB0aW1lcy4KaW5zcGVjdChjLkVudHJpZXMoKSkKLi4KYy5TdG9wKCkgIC8vIFN0b3AgdGhlIHNjaGVkdWxlciAoZG9lcyBub3Qgc3RvcCBhbnkgam9icyBhbHJlYWR5IHJ1bm5pbmcpLgo8L3ByZT48aDQgaWQ9Imhkci1DUk9OX0V4cHJlc3Npb25fRm9ybWF0Ij5DUk9OIEV4cHJlc3Npb24gRm9ybWF0IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI2hkci1DUk9OX0V4cHJlc3Npb25fRm9ybWF0Ij7CtjwvYT48L2g0PgogIDxwPkEgY3JvbiBleHByZXNzaW9uIHJlcHJlc2VudHMgYSBzZXQgb2YgdGltZXMsIHVzaW5nIDYgc3BhY2Utc2VwYXJhdGVkIGZpZWxkcy4KPC9wPjxwcmU+RmllbGQgbmFtZSAgIHwgTWFuZGF0b3J5PyB8IEFsbG93ZWQgdmFsdWVzICB8IEFsbG93ZWQgc3BlY2lhbCBjaGFyYWN0ZXJzCi0tLS0tLS0tLS0gICB8IC0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0tLSAgfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQpTZWNvbmRzICAgICAgfCBZZXMgICAgICAgIHwgMC01OSAgICAgICAgICAgIHwgKiAvICwgLQpNaW51dGVzICAgICAgfCBZZXMgICAgICAgIHwgMC01OSAgICAgICAgICAgIHwgKiAvICwgLQpIb3VycyAgICAgICAgfCBZZXMgICAgICAgIHwgMC0yMyAgICAgICAgICAgIHwgKiAvICwgLQpEYXkgb2YgbW9udGggfCBZZXMgICAgICAgIHwgMS0zMSAgICAgICAgICAgIHwgKiAvICwgLSA/Ck1vbnRoICAgICAgICB8IFllcyAgICAgICAgfCAxLTEyIG9yIEpBTi1ERUMgfCAqIC8gLCAtCkRheSBvZiB3ZWVrICB8IFllcyAgICAgICAgfCAwLTYgb3IgU1VOLVNBVCAgfCAqIC8gLCAtID8KPC9wcmU+PHA+Tm90ZTogTW9udGggYW5kIERheS1vZi13ZWVrIGZpZWxkIHZhbHVlcyBhcmUgY2FzZSBpbnNlbnNpdGl2ZS4gICYjMzQ7U1VOJiMzNDssICYjMzQ7U3VuJiMzNDssCmFuZCAmIzM0O3N1biYjMzQ7IGFyZSBlcXVhbGx5IGFjY2VwdGVkLgo8L3A+PGg0IGlkPSJoZHItU3BlY2lhbF9DaGFyYWN0ZXJzIj5TcGVjaWFsIENoYXJhY3RlcnMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjaGRyLVNwZWNpYWxfQ2hhcmFjdGVycyI+wrY8L2E+PC9oND4KICA8cD5Bc3RlcmlzayAoICogKQo8L3A+PHA+VGhlIGFzdGVyaXNrIGluZGljYXRlcyB0aGF0IHRoZSBjcm9uIGV4cHJlc3Npb24gd2lsbCBtYXRjaCBmb3IgYWxsIHZhbHVlcyBvZiB0aGUKZmllbGQ7IGUuZy4sIHVzaW5nIGFuIGFzdGVyaXNrIGluIHRoZSA1dGggZmllbGQgKG1vbnRoKSB3b3VsZCBpbmRpY2F0ZSBldmVyeQptb250aC4KPC9wPjxwPlNsYXNoICggLyApCjwvcD48cD5TbGFzaGVzIGFyZSB1c2VkIHRvIGRlc2NyaWJlIGluY3JlbWVudHMgb2YgcmFuZ2VzLiBGb3IgZXhhbXBsZSAzLTU5LzE1IGluIHRoZQoxc3QgZmllbGQgKG1pbnV0ZXMpIHdvdWxkIGluZGljYXRlIHRoZSAzcmQgbWludXRlIG9mIHRoZSBob3VyIGFuZCBldmVyeSAxNQptaW51dGVzIHRoZXJlYWZ0ZXIuIFRoZSBmb3JtICYjMzQ7KlwvLi4uJiMzNDsgaXMgZXF1aXZhbGVudCB0byB0aGUgZm9ybSAmIzM0O2ZpcnN0LWxhc3QvLi4uJiMzNDssCnRoYXQgaXMsIGFuIGluY3JlbWVudCBvdmVyIHRoZSBsYXJnZXN0IHBvc3NpYmxlIHJhbmdlIG9mIHRoZSBmaWVsZC4gIFRoZSBmb3JtCiYjMzQ7Ti8uLi4mIzM0OyBpcyBhY2NlcHRlZCBhcyBtZWFuaW5nICYjMzQ7Ti1NQVgvLi4uJiMzNDssIHRoYXQgaXMsIHN0YXJ0aW5nIGF0IE4sIHVzZSB0aGUKaW5jcmVtZW50IHVudGlsIHRoZSBlbmQgb2YgdGhhdCBzcGVjaWZpYyByYW5nZS4gIEl0IGRvZXMgbm90IHdyYXAgYXJvdW5kLgo8L3A+PHA+Q29tbWEgKCAsICkKPC9wPjxwPkNvbW1hcyBhcmUgdXNlZCB0byBzZXBhcmF0ZSBpdGVtcyBvZiBhIGxpc3QuIEZvciBleGFtcGxlLCB1c2luZyAmIzM0O01PTixXRUQsRlJJJiMzNDsgaW4KdGhlIDV0aCBmaWVsZCAoZGF5IG9mIHdlZWspIHdvdWxkIG1lYW4gTW9uZGF5cywgV2VkbmVzZGF5cyBhbmQgRnJpZGF5cy4KPC9wPjxwPkh5cGhlbiAoIC0gKQo8L3A+PHA+SHlwaGVucyBhcmUgdXNlZCB0byBkZWZpbmUgcmFuZ2VzLiBGb3IgZXhhbXBsZSwgOS0xNyB3b3VsZCBpbmRpY2F0ZSBldmVyeQpob3VyIGJldHdlZW4gOWFtIGFuZCA1cG0gaW5jbHVzaXZlLgo8L3A+PHA+UXVlc3Rpb24gbWFyayAoID8gKQo8L3A+PHA+UXVlc3Rpb24gbWFyayBtYXkgYmUgdXNlZCBpbnN0ZWFkIG9mICYjMzk7KiYjMzk7IGZvciBsZWF2aW5nIGVpdGhlciBkYXktb2YtbW9udGggb3IKZGF5LW9mLXdlZWsgYmxhbmsuCjwvcD48aDQgaWQ9Imhkci1QcmVkZWZpbmVkX3NjaGVkdWxlcyI+UHJlZGVmaW5lZCBzY2hlZHVsZXMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjaGRyLVByZWRlZmluZWRfc2NoZWR1bGVzIj7CtjwvYT48L2g0PgogIDxwPllvdSBtYXkgdXNlIG9uZSBvZiBzZXZlcmFsIHByZS1kZWZpbmVkIHNjaGVkdWxlcyBpbiBwbGFjZSBvZiBhIGNyb24gZXhwcmVzc2lvbi4KPC9wPjxwcmU+RW50cnkgICAgICAgICAgICAgICAgICB8IERlc2NyaXB0aW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IEVxdWl2YWxlbnQgVG8KLS0tLS0gICAgICAgICAgICAgICAgICB8IC0tLS0tLS0tLS0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IC0tLS0tLS0tLS0tLS0KQHllYXJseSAob3IgQGFubnVhbGx5KSB8IFJ1biBvbmNlIGEgeWVhciwgbWlkbmlnaHQsIEphbi4gMXN0ICAgICAgICB8IDAgMCAwIDEgMSAqCkBtb250aGx5ICAgICAgICAgICAgICAgfCBSdW4gb25jZSBhIG1vbnRoLCBtaWRuaWdodCwgZmlyc3Qgb2YgbW9udGggfCAwIDAgMCAxICogKgpAd2Vla2x5ICAgICAgICAgICAgICAgIHwgUnVuIG9uY2UgYSB3ZWVrLCBtaWRuaWdodCBiZXR3ZWVuIFNhdC9TdW4gIHwgMCAwIDAgKiAqIDAKQGRhaWx5IChvciBAbWlkbmlnaHQpICB8IFJ1biBvbmNlIGEgZGF5LCBtaWRuaWdodCAgICAgICAgICAgICAgICAgICB8IDAgMCAwICogKiAqCkBob3VybHkgICAgICAgICAgICAgICAgfCBSdW4gb25jZSBhbiBob3VyLCBiZWdpbm5pbmcgb2YgaG91ciAgICAgICAgfCAwIDAgKiAqICogKgo8L3ByZT48aDQgaWQ9Imhkci1JbnRlcnZhbHMiPkludGVydmFscyA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNoZHItSW50ZXJ2YWxzIj7CtjwvYT48L2g0PgogIDxwPllvdSBtYXkgYWxzbyBzY2hlZHVsZSBhIGpvYiB0byBleGVjdXRlIGF0IGZpeGVkIGludGVydmFscywgc3RhcnRpbmcgYXQgdGhlIHRpbWUgaXQmIzM5O3MgYWRkZWQKb3IgY3JvbiBpcyBydW4uIFRoaXMgaXMgc3VwcG9ydGVkIGJ5IGZvcm1hdHRpbmcgdGhlIGNyb24gc3BlYyBsaWtlIHRoaXM6CjwvcD48cHJlPkBldmVyeSAmbHQ7ZHVyYXRpb24mZ3Q7CjwvcHJlPjxwPndoZXJlICYjMzQ7ZHVyYXRpb24mIzM0OyBpcyBhIHN0cmluZyBhY2NlcHRlZCBieSB0aW1lLlBhcnNlRHVyYXRpb24KKDxhIGhyZWY9Imh0dHA6Ly9nb2xhbmcub3JnL3BrZy90aW1lLyNQYXJzZUR1cmF0aW9uIj5odHRwOi8vZ29sYW5nLm9yZy9wa2cvdGltZS8jUGFyc2VEdXJhdGlvbjwvYT4pLgo8L3A+PHA+Rm9yIGV4YW1wbGUsICYjMzQ7QGV2ZXJ5IDFoMzBtMTBzJiMzNDsgd291bGQgaW5kaWNhdGUgYSBzY2hlZHVsZSB0aGF0IGFjdGl2YXRlcyBhZnRlcgoxIGhvdXIsIDMwIG1pbnV0ZXMsIDEwIHNlY29uZHMsIGFuZCB0aGVuIGV2ZXJ5IGludGVydmFsIGFmdGVyIHRoYXQuCjwvcD48cD5Ob3RlOiBUaGUgaW50ZXJ2YWwgZG9lcyBub3QgdGFrZSB0aGUgam9iIHJ1bnRpbWUgaW50byBhY2NvdW50LiAgRm9yIGV4YW1wbGUsCmlmIGEgam9iIHRha2VzIDMgbWludXRlcyB0byBydW4sIGFuZCBpdCBpcyBzY2hlZHVsZWQgdG8gcnVuIGV2ZXJ5IDUgbWludXRlcywKaXQgd2lsbCBoYXZlIG9ubHkgMiBtaW51dGVzIG9mIGlkbGUgdGltZSBiZXR3ZWVuIGVhY2ggcnVuLgo8L3A+PGg0IGlkPSJoZHItVGltZV96b25lcyI+VGltZSB6b25lcyA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNoZHItVGltZV96b25lcyI+wrY8L2E+PC9oND4KICA8cD5BbGwgaW50ZXJwcmV0YXRpb24gYW5kIHNjaGVkdWxpbmcgaXMgZG9uZSBpbiB0aGUgbWFjaGluZSYjMzk7cyBsb2NhbCB0aW1lIHpvbmUgKGFzCnByb3ZpZGVkIGJ5IHRoZSBHbyB0aW1lIHBhY2thZ2UgKDxhIGhyZWY9Imh0dHA6Ly93d3cuZ29sYW5nLm9yZy9wa2cvdGltZSI+aHR0cDovL3d3dy5nb2xhbmcub3JnL3BrZy90aW1lPC9hPikuCjwvcD48cD5CZSBhd2FyZSB0aGF0IGpvYnMgc2NoZWR1bGVkIGR1cmluZyBkYXlsaWdodC1zYXZpbmdzIGxlYXAtYWhlYWQgdHJhbnNpdGlvbnMgd2lsbApub3QgYmUgcnVuIQo8L3A+PGg0IGlkPSJoZHItVGhyZWFkX3NhZmV0eSI+VGhyZWFkIHNhZmV0eSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNoZHItVGhyZWFkX3NhZmV0eSI+wrY8L2E+PC9oND4KICA8cD5TaW5jZSB0aGUgQ3JvbiBzZXJ2aWNlIHJ1bnMgY29uY3VycmVudGx5IHdpdGggdGhlIGNhbGxpbmcgY29kZSwgc29tZSBhbW91bnQgb2YKY2FyZSBtdXN0IGJlIHRha2VuIHRvIGVuc3VyZSBwcm9wZXIgc3luY2hyb25pemF0aW9uLgo8L3A+PHA+QWxsIGNyb24gbWV0aG9kcyBhcmUgZGVzaWduZWQgdG8gYmUgY29ycmVjdGx5IHN5bmNocm9uaXplZCBhcyBsb25nIGFzIHRoZSBjYWxsZXIKZW5zdXJlcyB0aGF0IGludm9jYXRpb25zIGhhdmUgYSBjbGVhciBoYXBwZW5zLWJlZm9yZSBvcmRlcmluZyBiZXR3ZWVuIHRoZW0uCjwvcD48aDQgaWQ9Imhkci1JbXBsZW1lbnRhdGlvbiI+SW1wbGVtZW50YXRpb24gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjaGRyLUltcGxlbWVudGF0aW9uIj7CtjwvYT48L2g0PgogIDxwPkNyb24gZW50cmllcyBhcmUgc3RvcmVkIGluIGFuIGFycmF5LCBzb3J0ZWQgYnkgdGhlaXIgbmV4dCBhY3RpdmF0aW9uIHRpbWUuICBDcm9uCnNsZWVwcyB1bnRpbCB0aGUgbmV4dCBqb2IgaXMgZHVlIHRvIGJlIHJ1bi4KPC9wPjxwPlVwb24gd2FraW5nOgo8L3A+PHByZT4tIGl0IHJ1bnMgZWFjaCBlbnRyeSB0aGF0IGlzIGFjdGl2ZSBvbiB0aGF0IHNlY29uZAotIGl0IGNhbGN1bGF0ZXMgdGhlIG5leHQgcnVuIHRpbWVzIGZvciB0aGUgam9icyB0aGF0IHdlcmUgcnVuCi0gaXQgcmUtc29ydHMgdGhlIGFycmF5IG9mIGVudHJpZXMgYnkgbmV4dCBhY3RpdmF0aW9uIHRpbWUuCi0gaXQgZ29lcyB0byBzbGVlcCB1bnRpbCB0aGUgc29vbmVzdCBqb2IuCjwvcHJlPgo8L3NlY3Rpb24+PHNlY3Rpb24gY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXgiPgogICAgPGgzIGlkPSJwa2ctaW5kZXgiIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4SGVhZGVyIj5JbmRleCA8YSBocmVmPSIjcGtnLWluZGV4Ij7CtjwvYT48L2gzPgoKPHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4TGlzdCI+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPjxhIGhyZWY9IiNDb25zdGFudERlbGF5U2NoZWR1bGUiPnR5cGUgQ29uc3RhbnREZWxheVNjaGVkdWxlPC9hPjwvbGk+CjxsaT48dWwgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlRnVuY3Rpb25zIj4KPGxpPjxhIGhyZWY9IiNFdmVyeSI+ZnVuYyBFdmVyeShkdXJhdGlvbiB0aW1lLkR1cmF0aW9uKSBDb25zdGFudERlbGF5U2NoZWR1bGU8L2E+PC9saT4KCiAgICAgICAgICA8L3VsPjwvbGk+CjxsaT48dWwgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlTWV0aG9kcyI+CjxsaT48YSBocmVmPSIjQ29uc3RhbnREZWxheVNjaGVkdWxlLk5leHQiPmZ1bmMgKHNjaGVkdWxlIENvbnN0YW50RGVsYXlTY2hlZHVsZSkgTmV4dCh0IHRpbWUuVGltZSkgdGltZS5UaW1lPC9hPjwvbGk+CgogICAgICAgICAgPC91bD48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj48YSBocmVmPSIjQ3JvbiI+dHlwZSBDcm9uPC9hPjwvbGk+CjxsaT48dWwgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlRnVuY3Rpb25zIj4KPGxpPjxhIGhyZWY9IiNOZXciPmZ1bmMgTmV3KCkgKkNyb248L2E+PC9saT4KPGxpPjxhIGhyZWY9IiNOZXdXaXRoTG9jYXRpb24iPmZ1bmMgTmV3V2l0aExvY2F0aW9uKGxvY2F0aW9uICp0aW1lLkxvY2F0aW9uKSAqQ3JvbjwvYT48L2xpPgoKICAgICAgICAgIDwvdWw+PC9saT4KPGxpPjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGVNZXRob2RzIj4KPGxpPjxhIGhyZWY9IiNDcm9uLkFkZEZ1bmMiPmZ1bmMgKGMgKkNyb24pIEFkZEZ1bmMoc3BlYyBzdHJpbmcsIGNtZCBmdW5jKCkpIGVycm9yPC9hPjwvbGk+CjxsaT48YSBocmVmPSIjQ3Jvbi5BZGRKb2IiPmZ1bmMgKGMgKkNyb24pIEFkZEpvYihzcGVjIHN0cmluZywgY21kIEpvYikgZXJyb3I8L2E+PC9saT4KPGxpPjxhIGhyZWY9IiNDcm9uLkVudHJpZXMiPmZ1bmMgKGMgKkNyb24pIEVudHJpZXMoKSBbXSpFbnRyeTwvYT48L2xpPgo8bGk+PGEgaHJlZj0iI0Nyb24uTG9jYXRpb24iPmZ1bmMgKGMgKkNyb24pIExvY2F0aW9uKCkgKnRpbWUuTG9jYXRpb248L2E+PC9saT4KPGxpPjxhIGhyZWY9IiNDcm9uLlJ1biI+ZnVuYyAoYyAqQ3JvbikgUnVuKCk8L2E+PC9saT4KPGxpPjxhIGhyZWY9IiNDcm9uLlNjaGVkdWxlIj5mdW5jIChjICpDcm9uKSBTY2hlZHVsZShzY2hlZHVsZSBTY2hlZHVsZSwgY21kIEpvYik8L2E+PC9saT4KPGxpPjxhIGhyZWY9IiNDcm9uLlN0YXJ0Ij5mdW5jIChjICpDcm9uKSBTdGFydCgpPC9hPjwvbGk+CjxsaT48YSBocmVmPSIjQ3Jvbi5TdG9wIj5mdW5jIChjICpDcm9uKSBTdG9wKCk8L2E+PC9saT4KCiAgICAgICAgICA8L3VsPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPjxhIGhyZWY9IiNFbnRyeSI+dHlwZSBFbnRyeTwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj48YSBocmVmPSIjRnVuY0pvYiI+dHlwZSBGdW5jSm9iPC9hPjwvbGk+CjxsaT48dWwgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlTWV0aG9kcyI+CjxsaT48YSBocmVmPSIjRnVuY0pvYi5SdW4iPmZ1bmMgKGYgRnVuY0pvYikgUnVuKCk8L2E+PC9saT4KCiAgICAgICAgICA8L3VsPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPjxhIGhyZWY9IiNKb2IiPnR5cGUgSm9iPC9hPjwvbGk+CjxsaSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGUiPjxhIGhyZWY9IiNQYXJzZU9wdGlvbiI+dHlwZSBQYXJzZU9wdGlvbjwvYT48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj48YSBocmVmPSIjUGFyc2VyIj50eXBlIFBhcnNlcjwvYT48L2xpPgo8bGk+PHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZUZ1bmN0aW9ucyI+CjxsaT48YSBocmVmPSIjTmV3UGFyc2VyIj5mdW5jIE5ld1BhcnNlcihvcHRpb25zIFBhcnNlT3B0aW9uKSBQYXJzZXI8L2E+PC9saT4KCiAgICAgICAgICA8L3VsPjwvbGk+CjxsaT48dWwgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlTWV0aG9kcyI+CjxsaT48YSBocmVmPSIjUGFyc2VyLlBhcnNlIj5mdW5jIChwIFBhcnNlcikgUGFyc2Uoc3BlYyBzdHJpbmcpIChTY2hlZHVsZSwgZXJyb3IpPC9hPjwvbGk+CgogICAgICAgICAgPC91bD48L2xpPgo8bGkgY2xhc3M9IkRvY3VtZW50YXRpb24taW5kZXhUeXBlIj48YSBocmVmPSIjU2NoZWR1bGUiPnR5cGUgU2NoZWR1bGU8L2E+PC9saT4KPGxpPjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGVGdW5jdGlvbnMiPgo8bGk+PGEgaHJlZj0iI1BhcnNlIj5mdW5jIFBhcnNlKHNwZWMgc3RyaW5nKSAoU2NoZWR1bGUsIGVycm9yKTwvYT48L2xpPgo8bGk+PGEgaHJlZj0iI1BhcnNlU3RhbmRhcmQiPmZ1bmMgUGFyc2VTdGFuZGFyZChzdGFuZGFyZFNwZWMgc3RyaW5nKSAoU2NoZWR1bGUsIGVycm9yKTwvYT48L2xpPgoKICAgICAgICAgIDwvdWw+PC9saT4KPGxpIGNsYXNzPSJEb2N1bWVudGF0aW9uLWluZGV4VHlwZSI+PGEgaHJlZj0iI1NwZWNTY2hlZHVsZSI+dHlwZSBTcGVjU2NoZWR1bGU8L2E+PC9saT4KPGxpPjx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pbmRleFR5cGVNZXRob2RzIj4KPGxpPjxhIGhyZWY9IiNTcGVjU2NoZWR1bGUuTmV4dCI+ZnVuYyAocyAqU3BlY1NjaGVkdWxlKSBOZXh0KHQgdGltZS5UaW1lKSB0aW1lLlRpbWU8L2E+PC9saT4KCiAgICAgICAgICA8L3VsPjwvbGk+CjwvdWw+Cjwvc2VjdGlvbj48aDMgdGFiaW5kZXg9Ii0xIiBpZD0icGtnLWNvbnN0YW50cyIgY2xhc3M9IkRvY3VtZW50YXRpb24tY29uc3RhbnRzSGVhZGVyIj5Db25zdGFudHMgPGEgaHJlZj0iI3BrZy1jb25zdGFudHMiPsK2PC9hPjwvaDM+CgogIDxzZWN0aW9uIGNsYXNzPSJEb2N1bWVudGF0aW9uLWNvbnN0YW50cyI+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1lbXB0eSI+VGhpcyBzZWN0aW9uIGlzIGVtcHR5LjwvZGl2Pjwvc2VjdGlvbj4KCiAgPGgzIHRhYmluZGV4PSItMSIgaWQ9InBrZy12YXJpYWJsZXMiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXZhcmlhYmxlc0hlYWRlciI+VmFyaWFibGVzIDxhIGhyZWY9IiNwa2ctdmFyaWFibGVzIj7CtjwvYT48L2gzPgoKICA8c2VjdGlvbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi12YXJpYWJsZXMiPjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZW1wdHkiPlRoaXMgc2VjdGlvbiBpcyBlbXB0eS48L2Rpdj48L3NlY3Rpb24+CgogIDxoMyB0YWJpbmRleD0iLTEiIGlkPSJwa2ctZnVuY3Rpb25zIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1mdW5jdGlvbnNIZWFkZXIiPkZ1bmN0aW9ucyA8YSBocmVmPSIjcGtnLWZ1bmN0aW9ucyI+wrY8L2E+PC9oMz4KCiAgPHNlY3Rpb24gY2xhc3M9IkRvY3VtZW50YXRpb24tZnVuY3Rpb25zIj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWVtcHR5Ij5UaGlzIHNlY3Rpb24gaXMgZW1wdHkuPC9kaXY+PC9zZWN0aW9uPgoKICA8aDMgdGFiaW5kZXg9Ii0xIiBpZD0icGtnLXR5cGVzIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlc0hlYWRlciI+VHlwZXMgPGEgaHJlZj0iI3BrZy10eXBlcyI+wrY8L2E+PC9oMz4KCiAgPHNlY3Rpb24gY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZXMiPjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IkNvbnN0YW50RGVsYXlTY2hlZHVsZSIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjEuMi4wL2NvbnN0YW50ZGVsYXkuZ28jTDciPkNvbnN0YW50RGVsYXlTY2hlZHVsZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjQ29uc3RhbnREZWxheVNjaGVkdWxlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIENvbnN0YW50RGVsYXlTY2hlZHVsZSBzdHJ1Y3Qgewo8c3BhbiBpZD0iQ29uc3RhbnREZWxheVNjaGVkdWxlLkRlbGF5IiBkYXRhLWtpbmQ9ImZpZWxkIj4JRGVsYXkgPGEgaHJlZj0iL3RpbWUiPnRpbWU8L2E+LjxhIGhyZWY9Ii90aW1lI0R1cmF0aW9uIj5EdXJhdGlvbjwvYT4KPC9zcGFuPn08L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5Db25zdGFudERlbGF5U2NoZWR1bGUgcmVwcmVzZW50cyBhIHNpbXBsZSByZWN1cnJpbmcgZHV0eSBjeWNsZSwgZS5nLiAmIzM0O0V2ZXJ5IDUgbWludXRlcyYjMzQ7LgpJdCBkb2VzIG5vdCBzdXBwb3J0IGpvYnMgbW9yZSBmcmVxdWVudCB0aGFuIG9uY2UgYSBzZWNvbmQuCjwvcD4KPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlRnVuYyI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IkV2ZXJ5IiBkYXRhLWtpbmQ9ImZ1bmN0aW9uIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlRnVuY0hlYWRlciI+CiAgICAgICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjEuMi4wL2NvbnN0YW50ZGVsYXkuZ28jTDE0Ij5FdmVyeTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRXZlcnkiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgRXZlcnkoZHVyYXRpb24gPGEgaHJlZj0iL3RpbWUiPnRpbWU8L2E+LjxhIGhyZWY9Ii90aW1lI0R1cmF0aW9uIj5EdXJhdGlvbjwvYT4pIDxhIGhyZWY9IiNDb25zdGFudERlbGF5U2NoZWR1bGUiPkNvbnN0YW50RGVsYXlTY2hlZHVsZTwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5FdmVyeSByZXR1cm5zIGEgY3JvbnRhYiBTY2hlZHVsZSB0aGF0IGFjdGl2YXRlcyBvbmNlIGV2ZXJ5IGR1cmF0aW9uLgpEZWxheXMgb2YgbGVzcyB0aGFuIGEgc2Vjb25kIGFyZSBub3Qgc3VwcG9ydGVkICh3aWxsIHJvdW5kIHVwIHRvIDEgc2Vjb25kKS4KQW55IGZpZWxkcyBsZXNzIHRoYW4gYSBTZWNvbmQgYXJlIHRydW5jYXRlZC4KPC9wPgo8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJDb25zdGFudERlbGF5U2NoZWR1bGUuTmV4dCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICAgICAgPHNwYW4+ZnVuYyAoQ29uc3RhbnREZWxheVNjaGVkdWxlKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi9ibG9iL3YxLjIuMC9jb25zdGFudGRlbGF5LmdvI0wyNSI+TmV4dDwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjQ29uc3RhbnREZWxheVNjaGVkdWxlLk5leHQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKHNjaGVkdWxlIDxhIGhyZWY9IiNDb25zdGFudERlbGF5U2NoZWR1bGUiPkNvbnN0YW50RGVsYXlTY2hlZHVsZTwvYT4pIE5leHQodCA8YSBocmVmPSIvdGltZSI+dGltZTwvYT4uPGEgaHJlZj0iL3RpbWUjVGltZSI+VGltZTwvYT4pIDxhIGhyZWY9Ii90aW1lIj50aW1lPC9hPi48YSBocmVmPSIvdGltZSNUaW1lIj5UaW1lPC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPGRpdiByb2xlPSJuYXZpZ2F0aW9uIiBhcmlhLWxhYmVsPSJUYWJsZSBvZiBDb250ZW50cyI+CgkJPHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvYyI+PC91bD4KCTwvZGl2PjxwPk5leHQgcmV0dXJucyB0aGUgbmV4dCB0aW1lIHRoaXMgc2hvdWxkIGJlIHJ1bi4KVGhpcyByb3VuZHMgc28gdGhhdCB0aGUgbmV4dCBhY3RpdmF0aW9uIHRpbWUgd2lsbCBiZSBvbiB0aGUgc2Vjb25kLgo8L3A+CjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IkNyb24iIGRhdGEta2luZD0idHlwZSIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUhlYWRlciI+CiAgICAgICAgPHNwYW4+dHlwZSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi9ibG9iL3YxLjIuMC9jcm9uLmdvI0wxMyI+Q3JvbjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjQ3JvbiI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBDcm9uIHN0cnVjdCB7CjxzcGFuIGlkPSJDcm9uLkVycm9yTG9nIiBkYXRhLWtpbmQ9ImZpZWxkIj4JRXJyb3JMb2cgKjxhIGhyZWY9Ii9sb2ciPmxvZzwvYT4uPGEgaHJlZj0iL2xvZyNMb2dnZXIiPkxvZ2dlcjwvYT4KPC9zcGFuPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gY29udGFpbnMgZmlsdGVyZWQgb3IgdW5leHBvcnRlZCBmaWVsZHM8L3NwYW4+Cn08L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5Dcm9uIGtlZXBzIHRyYWNrIG9mIGFueSBudW1iZXIgb2YgZW50cmllcywgaW52b2tpbmcgdGhlIGFzc29jaWF0ZWQgZnVuYyBhcwpzcGVjaWZpZWQgYnkgdGhlIHNjaGVkdWxlLiBJdCBtYXkgYmUgc3RhcnRlZCwgc3RvcHBlZCwgYW5kIHRoZSBlbnRyaWVzIG1heQpiZSBpbnNwZWN0ZWQgd2hpbGUgcnVubmluZy4KPC9wPgo8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVGdW5jIj48aDQgdGFiaW5kZXg9Ii0xIiBpZD0iTmV3IiBkYXRhLWtpbmQ9ImZ1bmN0aW9uIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlRnVuY0hlYWRlciI+CiAgICAgICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjEuMi4wL2Nyb24uZ28jTDcyIj5OZXc8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI05ldyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyBOZXcoKSAqPGEgaHJlZj0iI0Nyb24iPkNyb248L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8ZGl2IHJvbGU9Im5hdmlnYXRpb24iIGFyaWEtbGFiZWw9IlRhYmxlIG9mIENvbnRlbnRzIj4KCQk8dWwgY2xhc3M9IkRvY3VtZW50YXRpb24tdG9jIj48L3VsPgoJPC9kaXY+PHA+TmV3IHJldHVybnMgYSBuZXcgQ3JvbiBqb2IgcnVubmVyLCBpbiB0aGUgTG9jYWwgdGltZSB6b25lLgo8L3A+CjwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUZ1bmMiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJOZXdXaXRoTG9jYXRpb24iIGRhdGEta2luZD0iZnVuY3Rpb24iIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVGdW5jSGVhZGVyIj4KICAgICAgICAgIDxzcGFuPmZ1bmMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92MS4yLjAvY3Jvbi5nbyNMNzciPk5ld1dpdGhMb2NhdGlvbjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjTmV3V2l0aExvY2F0aW9uIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIE5ld1dpdGhMb2NhdGlvbihsb2NhdGlvbiAqPGEgaHJlZj0iL3RpbWUiPnRpbWU8L2E+LjxhIGhyZWY9Ii90aW1lI0xvY2F0aW9uIj5Mb2NhdGlvbjwvYT4pICo8YSBocmVmPSIjQ3JvbiI+Q3JvbjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5OZXdXaXRoTG9jYXRpb24gcmV0dXJucyBhIG5ldyBDcm9uIGpvYiBydW5uZXIuCjwvcD4KPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj48aDQgdGFiaW5kZXg9Ii0xIiBpZD0iQ3Jvbi5BZGRGdW5jIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgICAgICA8c3Bhbj5mdW5jICgqQ3JvbikgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92MS4yLjAvY3Jvbi5nbyNMOTUiPkFkZEZ1bmM8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0Nyb24uQWRkRnVuYyI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoYyAqPGEgaHJlZj0iI0Nyb24iPkNyb248L2E+KSBBZGRGdW5jKHNwZWMgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+LCBjbWQgZnVuYygpKSA8YSBocmVmPSIvYnVpbHRpbiNlcnJvciI+ZXJyb3I8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8ZGl2IHJvbGU9Im5hdmlnYXRpb24iIGFyaWEtbGFiZWw9IlRhYmxlIG9mIENvbnRlbnRzIj4KCQk8dWwgY2xhc3M9IkRvY3VtZW50YXRpb24tdG9jIj48L3VsPgoJPC9kaXY+PHA+QWRkRnVuYyBhZGRzIGEgZnVuYyB0byB0aGUgQ3JvbiB0byBiZSBydW4gb24gdGhlIGdpdmVuIHNjaGVkdWxlLgo8L3A+CjwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IkNyb24uQWRkSm9iIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgICAgICA8c3Bhbj5mdW5jICgqQ3JvbikgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92MS4yLjAvY3Jvbi5nbyNMMTAwIj5BZGRKb2I8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0Nyb24uQWRkSm9iIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChjICo8YSBocmVmPSIjQ3JvbiI+Q3JvbjwvYT4pIEFkZEpvYihzcGVjIDxhIGhyZWY9Ii9idWlsdGluI3N0cmluZyI+c3RyaW5nPC9hPiwgY21kIDxhIGhyZWY9IiNKb2IiPkpvYjwvYT4pIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5BZGRKb2IgYWRkcyBhIEpvYiB0byB0aGUgQ3JvbiB0byBiZSBydW4gb24gdGhlIGdpdmVuIHNjaGVkdWxlLgo8L3A+CjwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IkNyb24uRW50cmllcyIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICAgICAgPHNwYW4+ZnVuYyAoKkNyb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjEuMi4wL2Nyb24uZ28jTDEyNCI+RW50cmllczwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjQ3Jvbi5FbnRyaWVzIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChjICo8YSBocmVmPSIjQ3JvbiI+Q3JvbjwvYT4pIEVudHJpZXMoKSBbXSo8YSBocmVmPSIjRW50cnkiPkVudHJ5PC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPGRpdiByb2xlPSJuYXZpZ2F0aW9uIiBhcmlhLWxhYmVsPSJUYWJsZSBvZiBDb250ZW50cyI+CgkJPHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvYyI+PC91bD4KCTwvZGl2PjxwPkVudHJpZXMgcmV0dXJucyBhIHNuYXBzaG90IG9mIHRoZSBjcm9uIGVudHJpZXMuCjwvcD4KPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj48aDQgdGFiaW5kZXg9Ii0xIiBpZD0iQ3Jvbi5Mb2NhdGlvbiIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICAgICAgPHNwYW4+ZnVuYyAoKkNyb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjEuMi4wL2Nyb24uZ28jTDEzNCI+TG9jYXRpb248L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0Nyb24uTG9jYXRpb24iPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGMgKjxhIGhyZWY9IiNDcm9uIj5Dcm9uPC9hPikgTG9jYXRpb24oKSAqPGEgaHJlZj0iL3RpbWUiPnRpbWU8L2E+LjxhIGhyZWY9Ii90aW1lI0xvY2F0aW9uIj5Mb2NhdGlvbjwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5Mb2NhdGlvbiBnZXRzIHRoZSB0aW1lIHpvbmUgbG9jYXRpb24KPC9wPgo8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJDcm9uLlJ1biIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICAgICAgPHNwYW4+ZnVuYyAoKkNyb24pIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjEuMi4wL2Nyb24uZ28jTDE0OCI+UnVuPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNDcm9uLlJ1biI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoYyAqPGEgaHJlZj0iI0Nyb24iPkNyb248L2E+KSBSdW4oKTwvcHJlPgogICAgPC9kaXY+CiAgPGRpdiByb2xlPSJuYXZpZ2F0aW9uIiBhcmlhLWxhYmVsPSJUYWJsZSBvZiBDb250ZW50cyI+CgkJPHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvYyI+PC91bD4KCTwvZGl2PjxwPlJ1biB0aGUgY3JvbiBzY2hlZHVsZXIsIG9yIG5vLW9wIGlmIGFscmVhZHkgcnVubmluZy4KPC9wPgo8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJDcm9uLlNjaGVkdWxlIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgICAgICA8c3Bhbj5mdW5jICgqQ3JvbikgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92MS4yLjAvY3Jvbi5nbyNMMTEwIj5TY2hlZHVsZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjQ3Jvbi5TY2hlZHVsZSI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+ZnVuYyAoYyAqPGEgaHJlZj0iI0Nyb24iPkNyb248L2E+KSBTY2hlZHVsZShzY2hlZHVsZSA8YSBocmVmPSIjU2NoZWR1bGUiPlNjaGVkdWxlPC9hPiwgY21kIDxhIGhyZWY9IiNKb2IiPkpvYjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8ZGl2IHJvbGU9Im5hdmlnYXRpb24iIGFyaWEtbGFiZWw9IlRhYmxlIG9mIENvbnRlbnRzIj4KCQk8dWwgY2xhc3M9IkRvY3VtZW50YXRpb24tdG9jIj48L3VsPgoJPC9kaXY+PHA+U2NoZWR1bGUgYWRkcyBhIEpvYiB0byB0aGUgQ3JvbiB0byBiZSBydW4gb24gdGhlIGdpdmVuIHNjaGVkdWxlLgo8L3A+CjwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IkNyb24uU3RhcnQiIGRhdGEta2luZD0ibWV0aG9kIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kSGVhZGVyIj4KICAgICAgICAgIDxzcGFuPmZ1bmMgKCpDcm9uKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi9ibG9iL3YxLjIuMC9jcm9uLmdvI0wxMzkiPlN0YXJ0PC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNDcm9uLlN0YXJ0Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChjICo8YSBocmVmPSIjQ3JvbiI+Q3JvbjwvYT4pIFN0YXJ0KCk8L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5TdGFydCB0aGUgY3JvbiBzY2hlZHVsZXIgaW4gaXRzIG93biBnby1yb3V0aW5lLCBvciBuby1vcCBpZiBhbHJlYWR5IHN0YXJ0ZWQuCjwvcD4KPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlTWV0aG9kIj48aDQgdGFiaW5kZXg9Ii0xIiBpZD0iQ3Jvbi5TdG9wIiBkYXRhLWtpbmQ9Im1ldGhvZCIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZEhlYWRlciI+CiAgICAgICAgICA8c3Bhbj5mdW5jICgqQ3JvbikgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92MS4yLjAvY3Jvbi5nbyNMMjM0Ij5TdG9wPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNDcm9uLlN0b3AiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGMgKjxhIGhyZWY9IiNDcm9uIj5Dcm9uPC9hPikgU3RvcCgpPC9wcmU+CiAgICA8L2Rpdj4KICA8ZGl2IHJvbGU9Im5hdmlnYXRpb24iIGFyaWEtbGFiZWw9IlRhYmxlIG9mIENvbnRlbnRzIj4KCQk8dWwgY2xhc3M9IkRvY3VtZW50YXRpb24tdG9jIj48L3VsPgoJPC9kaXY+PHA+U3RvcCBzdG9wcyB0aGUgY3JvbiBzY2hlZHVsZXIgaWYgaXQgaXMgcnVubmluZzsgb3RoZXJ3aXNlIGl0IGRvZXMgbm90aGluZy4KPC9wPgo8L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJFbnRyeSIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjEuMi4wL2Nyb24uZ28jTDM2Ij5FbnRyeTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRW50cnkiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgRW50cnkgc3RydWN0IHsKPHNwYW4gaWQ9IkVudHJ5LlNjaGVkdWxlIiBkYXRhLWtpbmQ9ImZpZWxkIj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIFRoZSBzY2hlZHVsZSBvbiB3aGljaCB0aGlzIGpvYiBzaG91bGQgYmUgcnVuLjwvc3Bhbj4KPC9zcGFuPglTY2hlZHVsZSA8YSBocmVmPSIjU2NoZWR1bGUiPlNjaGVkdWxlPC9hPgoKPHNwYW4gaWQ9IkVudHJ5Lk5leHQiIGRhdGEta2luZD0iZmllbGQiPgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gVGhlIG5leHQgdGltZSB0aGUgam9iIHdpbGwgcnVuLiBUaGlzIGlzIHRoZSB6ZXJvIHRpbWUgaWYgQ3JvbiBoYXMgbm90IGJlZW48L3NwYW4+Cjwvc3Bhbj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIHN0YXJ0ZWQgb3IgdGhpcyBlbnRyeSYjMzk7cyBzY2hlZHVsZSBpcyB1bnNhdGlzZmlhYmxlPC9zcGFuPgoJTmV4dCA8YSBocmVmPSIvdGltZSI+dGltZTwvYT4uPGEgaHJlZj0iL3RpbWUjVGltZSI+VGltZTwvYT4KCjxzcGFuIGlkPSJFbnRyeS5QcmV2IiBkYXRhLWtpbmQ9ImZpZWxkIj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIFRoZSBsYXN0IHRpbWUgdGhpcyBqb2Igd2FzIHJ1bi4gVGhpcyBpcyB0aGUgemVybyB0aW1lIGlmIHRoZSBqb2IgaGFzIG5ldmVyPC9zcGFuPgo8L3NwYW4+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBiZWVuIHJ1bi48L3NwYW4+CglQcmV2IDxhIGhyZWY9Ii90aW1lIj50aW1lPC9hPi48YSBocmVmPSIvdGltZSNUaW1lIj5UaW1lPC9hPgoKPHNwYW4gaWQ9IkVudHJ5LkpvYiIgZGF0YS1raW5kPSJmaWVsZCI+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBUaGUgSm9iIHRvIHJ1bi48L3NwYW4+Cjwvc3Bhbj4JSm9iIDxhIGhyZWY9IiNKb2IiPkpvYjwvYT4KfTwvcHJlPgogICAgPC9kaXY+CiAgPGRpdiByb2xlPSJuYXZpZ2F0aW9uIiBhcmlhLWxhYmVsPSJUYWJsZSBvZiBDb250ZW50cyI+CgkJPHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvYyI+PC91bD4KCTwvZGl2PjxwPkVudHJ5IGNvbnNpc3RzIG9mIGEgc2NoZWR1bGUgYW5kIHRoZSBmdW5jIHRvIGV4ZWN1dGUgb24gdGhhdCBzY2hlZHVsZS4KPC9wPgo8L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJGdW5jSm9iIiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92MS4yLjAvY3Jvbi5nbyNMOTAiPkZ1bmNKb2I8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0Z1bmNKb2IiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgRnVuY0pvYiBmdW5jKCk8L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5BIHdyYXBwZXIgdGhhdCB0dXJucyBhIGZ1bmMoKSBpbnRvIGEgY3Jvbi5Kb2IKPC9wPgo8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJGdW5jSm9iLlJ1biIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICAgICAgPHNwYW4+ZnVuYyAoRnVuY0pvYikgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92MS4yLjAvY3Jvbi5nbyNMOTIiPlJ1bjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjRnVuY0pvYi5SdW4iPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgKGYgPGEgaHJlZj0iI0Z1bmNKb2IiPkZ1bmNKb2I8L2E+KSBSdW4oKTwvcHJlPgogICAgPC9kaXY+CiAgCjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IkpvYiIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjEuMi4wL2Nyb24uZ28jTDI0Ij5Kb2I8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI0pvYiI+wrY8L2E+PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNpbmNlVmVyc2lvbiI+CiAgICAKICA8L3NwYW4+CjwvaDQ+CgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+dHlwZSBKb2IgaW50ZXJmYWNlIHsKPHNwYW4gaWQ9IkpvYi5SdW4iIGRhdGEta2luZD0ibWV0aG9kIj4JUnVuKCkKPC9zcGFuPn08L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5Kb2IgaXMgYW4gaW50ZXJmYWNlIGZvciBzdWJtaXR0ZWQgY3JvbiBqb2JzLgo8L3A+CjwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IlBhcnNlT3B0aW9uIiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92MS4yLjAvcGFyc2VyLmdvI0wxNSI+UGFyc2VPcHRpb248L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1BhcnNlT3B0aW9uIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIFBhcnNlT3B0aW9uIDxhIGhyZWY9Ii9idWlsdGluI2ludCI+aW50PC9hPjwvcHJlPgogICAgPC9kaXY+CiAgPGRpdiByb2xlPSJuYXZpZ2F0aW9uIiBhcmlhLWxhYmVsPSJUYWJsZSBvZiBDb250ZW50cyI+CgkJPHVsIGNsYXNzPSJEb2N1bWVudGF0aW9uLXRvYyI+PC91bD4KCTwvZGl2PjxwPkNvbmZpZ3VyYXRpb24gb3B0aW9ucyBmb3IgY3JlYXRpbmcgYSBwYXJzZXIuIE1vc3Qgb3B0aW9ucyBzcGVjaWZ5IHdoaWNoCmZpZWxkcyBzaG91bGQgYmUgaW5jbHVkZWQsIHdoaWxlIG90aGVycyBlbmFibGUgZmVhdHVyZXMuIElmIGEgZmllbGQgaXMgbm90CmluY2x1ZGVkIHRoZSBwYXJzZXIgd2lsbCBhc3N1bWUgYSBkZWZhdWx0IHZhbHVlLiBUaGVzZSBvcHRpb25zIGRvIG5vdCBjaGFuZ2UKdGhlIG9yZGVyIGZpZWxkcyBhcmUgcGFyc2UgaW4uCjwvcD4KPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlQ29uc3RhbnQiPgogICAgPGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1kZWNsYXJhdGlvbiI+CiAgICAgIDxwcmU+Y29uc3QgKAo8c3BhbiBpZD0iU2Vjb25kIiBkYXRhLWtpbmQ9ImNvbnN0YW50Ij4JU2Vjb25kICAgICAgPGEgaHJlZj0iI1BhcnNlT3B0aW9uIj5QYXJzZU9wdGlvbjwvYT4gPSAxICZsdDsmbHQ7IDxhIGhyZWY9Ii9idWlsdGluI2lvdGEiPmlvdGE8L2E+IDxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBTZWNvbmRzIGZpZWxkLCBkZWZhdWx0IDA8L3NwYW4+Cjwvc3Bhbj48c3BhbiBpZD0iTWludXRlIiBkYXRhLWtpbmQ9ImNvbnN0YW50Ij4JTWludXRlICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIE1pbnV0ZXMgZmllbGQsIGRlZmF1bHQgMDwvc3Bhbj4KPC9zcGFuPjxzcGFuIGlkPSJIb3VyIiBkYXRhLWtpbmQ9ImNvbnN0YW50Ij4JSG91ciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIEhvdXJzIGZpZWxkLCBkZWZhdWx0IDA8L3NwYW4+Cjwvc3Bhbj48c3BhbiBpZD0iRG9tIiBkYXRhLWtpbmQ9ImNvbnN0YW50Ij4JRG9tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIERheSBvZiBtb250aCBmaWVsZCwgZGVmYXVsdCAqPC9zcGFuPgo8L3NwYW4+PHNwYW4gaWQ9Ik1vbnRoIiBkYXRhLWtpbmQ9ImNvbnN0YW50Ij4JTW9udGggICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIE1vbnRoIGZpZWxkLCBkZWZhdWx0ICo8L3NwYW4+Cjwvc3Bhbj48c3BhbiBpZD0iRG93IiBkYXRhLWtpbmQ9ImNvbnN0YW50Ij4JRG93ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIERheSBvZiB3ZWVrIGZpZWxkLCBkZWZhdWx0ICo8L3NwYW4+Cjwvc3Bhbj48c3BhbiBpZD0iRG93T3B0aW9uYWwiIGRhdGEta2luZD0iY29uc3RhbnQiPglEb3dPcHRpb25hbCAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gT3B0aW9uYWwgZGF5IG9mIHdlZWsgZmllbGQsIGRlZmF1bHQgKjwvc3Bhbj4KPC9zcGFuPjxzcGFuIGlkPSJEZXNjcmlwdG9yIiBkYXRhLWtpbmQ9ImNvbnN0YW50Ij4JRGVzY3JpcHRvciAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIEFsbG93IGRlc2NyaXB0b3JzIHN1Y2ggYXMgQG1vbnRobHksIEB3ZWVrbHksIGV0Yy48L3NwYW4+Cjwvc3Bhbj4pPC9wcmU+CiAgICA8L2Rpdj4KICAKPC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlIj48aDQgdGFiaW5kZXg9Ii0xIiBpZD0iUGFyc2VyIiBkYXRhLWtpbmQ9InR5cGUiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVIZWFkZXIiPgogICAgICAgIDxzcGFuPnR5cGUgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92MS4yLjAvcGFyc2VyLmdvI0w0NyI+UGFyc2VyPC9hPiA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1pZExpbmsiIGhyZWY9IiNQYXJzZXIiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgUGFyc2VyIHN0cnVjdCB7Cgk8c3BhbiBjbGFzcz0iY29tbWVudCI+Ly8gY29udGFpbnMgZmlsdGVyZWQgb3IgdW5leHBvcnRlZCBmaWVsZHM8L3NwYW4+Cn08L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5BIGN1c3RvbSBQYXJzZXIgdGhhdCBjYW4gYmUgY29uZmlndXJlZC4KPC9wPgo8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVGdW5jIj48aDQgdGFiaW5kZXg9Ii0xIiBpZD0iTmV3UGFyc2VyIiBkYXRhLWtpbmQ9ImZ1bmN0aW9uIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlRnVuY0hlYWRlciI+CiAgICAgICAgICA8c3Bhbj5mdW5jIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjEuMi4wL3BhcnNlci5nbyNMNjYiPk5ld1BhcnNlcjwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjTmV3UGFyc2VyIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIE5ld1BhcnNlcihvcHRpb25zIDxhIGhyZWY9IiNQYXJzZU9wdGlvbiI+UGFyc2VPcHRpb248L2E+KSA8YSBocmVmPSIjUGFyc2VyIj5QYXJzZXI8L2E+PC9wcmU+CiAgICA8L2Rpdj4KICA8ZGl2IHJvbGU9Im5hdmlnYXRpb24iIGFyaWEtbGFiZWw9IlRhYmxlIG9mIENvbnRlbnRzIj4KCQk8dWwgY2xhc3M9IkRvY3VtZW50YXRpb24tdG9jIj48L3VsPgoJPC9kaXY+PHA+Q3JlYXRlcyBhIGN1c3RvbSBQYXJzZXIgd2l0aCBjdXN0b20gb3B0aW9ucy4KPC9wPjxwcmU+Ly8gU3RhbmRhcmQgcGFyc2VyIHdpdGhvdXQgZGVzY3JpcHRvcnMKc3BlY1BhcnNlciA6PSBOZXdQYXJzZXIoTWludXRlIHwgSG91ciB8IERvbSB8IE1vbnRoIHwgRG93KQpzY2hlZCwgZXJyIDo9IHNwZWNQYXJzZXIuUGFyc2UoJiMzNDswIDAgMTUgKi8zIComIzM0OykKCi8vIFNhbWUgYXMgYWJvdmUsIGp1c3QgZXhjbHVkZXMgdGltZSBmaWVsZHMKc3Vic1BhcnNlciA6PSBOZXdQYXJzZXIoRG9tIHwgTW9udGggfCBEb3cpCnNjaGVkLCBlcnIgOj0gc3BlY1BhcnNlci5QYXJzZSgmIzM0OzE1ICovMyAqJiMzNDspCgovLyBTYW1lIGFzIGFib3ZlLCBqdXN0IG1ha2VzIERvdyBvcHRpb25hbApzdWJzUGFyc2VyIDo9IE5ld1BhcnNlcihEb20gfCBNb250aCB8IERvd09wdGlvbmFsKQpzY2hlZCwgZXJyIDo9IHNwZWNQYXJzZXIuUGFyc2UoJiMzNDsxNSAqLzMmIzM0OykKPC9wcmU+CjwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZU1ldGhvZCI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IlBhcnNlci5QYXJzZSIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICAgICAgPHNwYW4+ZnVuYyAoUGFyc2VyKSA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi9ibG9iL3YxLjIuMC9wYXJzZXIuZ28jTDc4Ij5QYXJzZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjUGFyc2VyLlBhcnNlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChwIDxhIGhyZWY9IiNQYXJzZXIiPlBhcnNlcjwvYT4pIFBhcnNlKHNwZWMgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSAoPGEgaHJlZj0iI1NjaGVkdWxlIj5TY2hlZHVsZTwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8ZGl2IHJvbGU9Im5hdmlnYXRpb24iIGFyaWEtbGFiZWw9IlRhYmxlIG9mIENvbnRlbnRzIj4KCQk8dWwgY2xhc3M9IkRvY3VtZW50YXRpb24tdG9jIj48L3VsPgoJPC9kaXY+PHA+UGFyc2UgcmV0dXJucyBhIG5ldyBjcm9udGFiIHNjaGVkdWxlIHJlcHJlc2VudGluZyB0aGUgZ2l2ZW4gc3BlYy4KSXQgcmV0dXJucyBhIGRlc2NyaXB0aXZlIGVycm9yIGlmIHRoZSBzcGVjIGlzIG5vdCB2YWxpZC4KSXQgYWNjZXB0cyBjcm9udGFiIHNwZWNzIGFuZCBmZWF0dXJlcyBjb25maWd1cmVkIGJ5IE5ld1BhcnNlci4KPC9wPgo8L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGUiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJTY2hlZHVsZSIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjEuMi4wL2Nyb24uZ28jTDI5Ij5TY2hlZHVsZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU2NoZWR1bGUiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPnR5cGUgU2NoZWR1bGUgaW50ZXJmYWNlIHsKPHNwYW4gaWQ9IlNjaGVkdWxlLk5leHQiIGRhdGEta2luZD0ibWV0aG9kIj4JPHNwYW4gY2xhc3M9ImNvbW1lbnQiPi8vIFJldHVybiB0aGUgbmV4dCBhY3RpdmF0aW9uIHRpbWUsIGxhdGVyIHRoYW4gdGhlIGdpdmVuIHRpbWUuPC9zcGFuPgo8L3NwYW4+CTxzcGFuIGNsYXNzPSJjb21tZW50Ij4vLyBOZXh0IGlzIGludm9rZWQgaW5pdGlhbGx5LCBhbmQgdGhlbiBlYWNoIHRpbWUgdGhlIGpvYiBpcyBydW4uPC9zcGFuPgoJTmV4dCg8YSBocmVmPSIvdGltZSI+dGltZTwvYT4uPGEgaHJlZj0iL3RpbWUjVGltZSI+VGltZTwvYT4pIDxhIGhyZWY9Ii90aW1lIj50aW1lPC9hPi48YSBocmVmPSIvdGltZSNUaW1lIj5UaW1lPC9hPgp9PC9wcmU+CiAgICA8L2Rpdj4KICA8ZGl2IHJvbGU9Im5hdmlnYXRpb24iIGFyaWEtbGFiZWw9IlRhYmxlIG9mIENvbnRlbnRzIj4KCQk8dWwgY2xhc3M9IkRvY3VtZW50YXRpb24tdG9jIj48L3VsPgoJPC9kaXY+PHA+VGhlIFNjaGVkdWxlIGRlc2NyaWJlcyBhIGpvYiYjMzk7cyBkdXR5IGN5Y2xlLgo8L3A+CjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUZ1bmMiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJQYXJzZSIgZGF0YS1raW5kPSJmdW5jdGlvbiIgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZUZ1bmNIZWFkZXIiPgogICAgICAgICAgPHNwYW4+ZnVuYyA8YSBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zb3VyY2UiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi9ibG9iL3YxLjIuMC9wYXJzZXIuZ28jTDE4NCI+UGFyc2U8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1BhcnNlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIFBhcnNlKHNwZWMgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSAoPGEgaHJlZj0iI1NjaGVkdWxlIj5TY2hlZHVsZTwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8ZGl2IHJvbGU9Im5hdmlnYXRpb24iIGFyaWEtbGFiZWw9IlRhYmxlIG9mIENvbnRlbnRzIj4KCQk8dWwgY2xhc3M9IkRvY3VtZW50YXRpb24tdG9jIj48L3VsPgoJPC9kaXY+PHA+UGFyc2UgcmV0dXJucyBhIG5ldyBjcm9udGFiIHNjaGVkdWxlIHJlcHJlc2VudGluZyB0aGUgZ2l2ZW4gc3BlYy4KSXQgcmV0dXJucyBhIGRlc2NyaXB0aXZlIGVycm9yIGlmIHRoZSBzcGVjIGlzIG5vdCB2YWxpZC4KPC9wPjxwPkl0IGFjY2VwdHMKPC9wPjxwcmU+LSBGdWxsIGNyb250YWIgc3BlY3MsIGUuZy4gJiMzNDsqICogKiAqICogPyYjMzQ7Ci0gRGVzY3JpcHRvcnMsIGUuZy4gJiMzNDtAbWlkbmlnaHQmIzM0OywgJiMzNDtAZXZlcnkgMWgzMG0mIzM0Owo8L3ByZT4KPC9kaXY+PGRpdiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlRnVuYyI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IlBhcnNlU3RhbmRhcmQiIGRhdGEta2luZD0iZnVuY3Rpb24iIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVGdW5jSGVhZGVyIj4KICAgICAgICAgIDxzcGFuPmZ1bmMgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92MS4yLjAvcGFyc2VyLmdvI0wxNzAiPlBhcnNlU3RhbmRhcmQ8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1BhcnNlU3RhbmRhcmQiPsK2PC9hPjwvc3Bhbj4KICA8c3BhbiBjbGFzcz0iRG9jdW1lbnRhdGlvbi1zaW5jZVZlcnNpb24iPgogICAgCiAgPC9zcGFuPgo8L2g0PgoKICAgIDxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tZGVjbGFyYXRpb24iPgogICAgICA8cHJlPmZ1bmMgUGFyc2VTdGFuZGFyZChzdGFuZGFyZFNwZWMgPGEgaHJlZj0iL2J1aWx0aW4jc3RyaW5nIj5zdHJpbmc8L2E+KSAoPGEgaHJlZj0iI1NjaGVkdWxlIj5TY2hlZHVsZTwvYT4sIDxhIGhyZWY9Ii9idWlsdGluI2Vycm9yIj5lcnJvcjwvYT4pPC9wcmU+CiAgICA8L2Rpdj4KICA8ZGl2IHJvbGU9Im5hdmlnYXRpb24iIGFyaWEtbGFiZWw9IlRhYmxlIG9mIENvbnRlbnRzIj4KCQk8dWwgY2xhc3M9IkRvY3VtZW50YXRpb24tdG9jIj48L3VsPgoJPC9kaXY+PHA+UGFyc2VTdGFuZGFyZCByZXR1cm5zIGEgbmV3IGNyb250YWIgc2NoZWR1bGUgcmVwcmVzZW50aW5nIHRoZSBnaXZlbiBzdGFuZGFyZFNwZWMKKDxhIGhyZWY9Imh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0Nyb24iPmh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0Nyb248L2E+KS4gSXQgZGlmZmVycyBmcm9tIFBhcnNlIHJlcXVpcmluZyB0byBhbHdheXMKcGFzcyA1IGVudHJpZXMgcmVwcmVzZW50aW5nOiBtaW51dGUsIGhvdXIsIGRheSBvZiBtb250aCwgbW9udGggYW5kIGRheSBvZiB3ZWVrLAppbiB0aGF0IG9yZGVyLiBJdCByZXR1cm5zIGEgZGVzY3JpcHRpdmUgZXJyb3IgaWYgdGhlIHNwZWMgaXMgbm90IHZhbGlkLgo8L3A+PHA+SXQgYWNjZXB0cwo8L3A+PHByZT4tIFN0YW5kYXJkIGNyb250YWIgc3BlY3MsIGUuZy4gJiMzNDsqICogKiAqID8mIzM0OwotIERlc2NyaXB0b3JzLCBlLmcuICYjMzQ7QG1pZG5pZ2h0JiMzNDssICYjMzQ7QGV2ZXJ5IDFoMzBtJiMzNDsKPC9wcmU+CjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9IkRvY3VtZW50YXRpb24tdHlwZSI+PGg0IHRhYmluZGV4PSItMSIgaWQ9IlNwZWNTY2hlZHVsZSIgZGF0YS1raW5kPSJ0eXBlIiBjbGFzcz0iRG9jdW1lbnRhdGlvbi10eXBlSGVhZGVyIj4KICAgICAgICA8c3Bhbj50eXBlIDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLXNvdXJjZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjEuMi4wL3NwZWMuZ28jTDciPlNwZWNTY2hlZHVsZTwvYT4gPGEgY2xhc3M9IkRvY3VtZW50YXRpb24taWRMaW5rIiBocmVmPSIjU3BlY1NjaGVkdWxlIj7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT50eXBlIFNwZWNTY2hlZHVsZSBzdHJ1Y3Qgewo8c3BhbiBpZD0iU3BlY1NjaGVkdWxlLlNlY29uZCIgZGF0YS1raW5kPSJmaWVsZCI+PHNwYW4gaWQ9IlNwZWNTY2hlZHVsZS5NaW51dGUiIGRhdGEta2luZD0iZmllbGQiPjxzcGFuIGlkPSJTcGVjU2NoZWR1bGUuSG91ciIgZGF0YS1raW5kPSJmaWVsZCI+PHNwYW4gaWQ9IlNwZWNTY2hlZHVsZS5Eb20iIGRhdGEta2luZD0iZmllbGQiPjxzcGFuIGlkPSJTcGVjU2NoZWR1bGUuTW9udGgiIGRhdGEta2luZD0iZmllbGQiPjxzcGFuIGlkPSJTcGVjU2NoZWR1bGUuRG93IiBkYXRhLWtpbmQ9ImZpZWxkIj4JU2Vjb25kLCBNaW51dGUsIEhvdXIsIERvbSwgTW9udGgsIERvdyA8YSBocmVmPSIvYnVpbHRpbiN1aW50NjQiPnVpbnQ2NDwvYT4KPC9zcGFuPn08L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5TcGVjU2NoZWR1bGUgc3BlY2lmaWVzIGEgZHV0eSBjeWNsZSAodG8gdGhlIHNlY29uZCBncmFudWxhcml0eSksIGJhc2VkIG9uIGEKdHJhZGl0aW9uYWwgY3JvbnRhYiBzcGVjaWZpY2F0aW9uLiBJdCBpcyBjb21wdXRlZCBpbml0aWFsbHkgYW5kIHN0b3JlZCBhcyBiaXQgc2V0cy4KPC9wPgo8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2QiPjxoNCB0YWJpbmRleD0iLTEiIGlkPSJTcGVjU2NoZWR1bGUuTmV4dCIgZGF0YS1raW5kPSJtZXRob2QiIGNsYXNzPSJEb2N1bWVudGF0aW9uLXR5cGVNZXRob2RIZWFkZXIiPgogICAgICAgICAgPHNwYW4+ZnVuYyAoKlNwZWNTY2hlZHVsZSkgPGEgY2xhc3M9IkRvY3VtZW50YXRpb24tc291cmNlIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92MS4yLjAvc3BlYy5nbyNMNTUiPk5leHQ8L2E+IDxhIGNsYXNzPSJEb2N1bWVudGF0aW9uLWlkTGluayIgaHJlZj0iI1NwZWNTY2hlZHVsZS5OZXh0Ij7CtjwvYT48L3NwYW4+CiAgPHNwYW4gY2xhc3M9IkRvY3VtZW50YXRpb24tc2luY2VWZXJzaW9uIj4KICAgIAogIDwvc3Bhbj4KPC9oND4KCiAgICA8ZGl2IGNsYXNzPSJEb2N1bWVudGF0aW9uLWRlY2xhcmF0aW9uIj4KICAgICAgPHByZT5mdW5jIChzICo8YSBocmVmPSIjU3BlY1NjaGVkdWxlIj5TcGVjU2NoZWR1bGU8L2E+KSBOZXh0KHQgPGEgaHJlZj0iL3RpbWUiPnRpbWU8L2E+LjxhIGhyZWY9Ii90aW1lI1RpbWUiPlRpbWU8L2E+KSA8YSBocmVmPSIvdGltZSI+dGltZTwvYT4uPGEgaHJlZj0iL3RpbWUjVGltZSI+VGltZTwvYT48L3ByZT4KICAgIDwvZGl2PgogIDxkaXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iVGFibGUgb2YgQ29udGVudHMiPgoJCTx1bCBjbGFzcz0iRG9jdW1lbnRhdGlvbi10b2MiPjwvdWw+Cgk8L2Rpdj48cD5OZXh0IHJldHVybnMgdGhlIG5leHQgdGltZSB0aGlzIHNjaGVkdWxlIGlzIGFjdGl2YXRlZCwgZ3JlYXRlciB0aGFuIHRoZSBnaXZlbgp0aW1lLiAgSWYgbm8gdGltZSBjYW4gYmUgZm91bmQgdG8gc2F0aXNmeSB0aGUgc2NoZWR1bGUsIHJldHVybiB0aGUgemVybyB0aW1lLgo8L3A+CjwvZGl2PjwvZGl2Pjwvc2VjdGlvbj48L2Rpdj4gCgogICAgICAKICAgIDwvZGl2PgogIDwvZGl2PgoKICAgICAgICAKICAgICAgCgogICAgICAKICAgICAgICAKICA8ZGl2IGNsYXNzPSJVbml0RmlsZXMganMtdW5pdEZpbGVzIj4KICAgIDxoMiBjbGFzcz0iVW5pdEZpbGVzLXRpdGxlIiBpZD0ic2VjdGlvbi1zb3VyY2VmaWxlcyI+CiAgICAgIDxpbWcgaGVpZ2h0PSIxNnB4IiB3aWR0aD0iMTJweCIgc3JjPSIvc3RhdGljL2ltZy9wa2ctaWNvbi1maWxlXzE2eDEyLnN2ZyIgYWx0PSIiPlNvdXJjZSBGaWxlcwogICAgICA8YSBjbGFzcz0iVW5pdEZpbGVzLWlkTGluayIgaHJlZj0iI3NlY3Rpb24tc291cmNlZmlsZXMiPsK2PC9hPgogICAgPC9oMj4KICAgIDxkaXYgY2xhc3M9IlVuaXRGaWxlcy10aXRsZUxpbmsiPgogICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vdHJlZS92MS4yLjAiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIj5WaWV3IGFsbDwvYT4KICAgIDwvZGl2PgogICAgPGRpdj4KICAgICAgPHVsIGNsYXNzPSJVbml0RmlsZXMtZmlsZUxpc3QiPjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjEuMi4wL2NvbnN0YW50ZGVsYXkuZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0iY29uc3RhbnRkZWxheS5nbyI+Y29uc3RhbnRkZWxheS5nbzwvYT4KICAgICAgICAgIDwvbGk+PGxpPgogICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92MS4yLjAvY3Jvbi5nbyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiIHRpdGxlPSJjcm9uLmdvIj5jcm9uLmdvPC9hPgogICAgICAgICAgPC9saT48bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9yb2JmaWcvY3Jvbi9ibG9iL3YxLjIuMC9kb2MuZ28iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIiB0aXRsZT0iZG9jLmdvIj5kb2MuZ288L2E+CiAgICAgICAgICA8L2xpPjxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uL2Jsb2IvdjEuMi4wL3BhcnNlci5nbyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiIHRpdGxlPSJwYXJzZXIuZ28iPnBhcnNlci5nbzwvYT4KICAgICAgICAgIDwvbGk+PGxpPgogICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcm9iZmlnL2Nyb24vYmxvYi92MS4yLjAvc3BlYy5nbyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIiIHRpdGxlPSJzcGVjLmdvIj5zcGVjLmdvPC9hPgogICAgICAgICAgPC9saT48L3VsPgogICAgPC9kaXY+CiAgPC9kaXY+CgogICAgICAKICAgICAgCiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9IlVuaXREZXRhaWxzLW1ldGEiIHJvbGU9ImNvbXBsZW1lbnRhcnkiIGFyaWEtbGFiZWw9ImxpbmtzIj4KICAgICAgCiAgPGRpdiBjbGFzcz0iVW5pdE1ldGEiPgogICAgPGgyIGNsYXNzPSJVbml0TWV0YS1kZXRhaWxzVGl0bGUiPkRldGFpbHM8L2gyPgogICAgPGRpdiBjbGFzcz0iVW5pdE1ldGEtZGV0YWlscyI+CiAgICAgIAogIDx1bD4KICAgIDxsaT4KICAgICAgCiAgPGltZyBjbGFzcz0iVW5pdE1ldGFEZXRhaWxzLWljb24ic3JjPSIvc3RhdGljL2ltZy9wa2ctaWNvbi1jYW5jZWxfMjR4MjQuc3ZnIiBhbHQ9InVuY2hlY2tlZCJoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiPgoKICAgICAgVmFsaWQgZ28ubW9kIGZpbGUKICAgICAgCiAgPHNwYW4gY2xhc3M9IlVuaXRNZXRhRGV0YWlscy10b2dnbGV0aXAiPgogICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGFyaWEtbGFiZWw9Im1vcmUgaW5mbyIgZGF0YS10b2dnbGV0aXAtY29udGVudD0iVGhlIEdvIG1vZHVsZSBzeXN0ZW0gd2FzIGludHJvZHVjZWQgaW4gR28gMS4xMSBhbmQgaXMgdGhlIG9mZmljaWFsIGRlcGVuZGVuY3kgbWFuYWdlbWVudCBzb2x1dGlvbiBmb3IgR28uIj4KICAgICAgPGltZyBjbGFzcz0iVW5pdE1ldGFEZXRhaWxzLWljb24iIHNyYz0iL3N0YXRpYy9pbWcvcGtnLWljb24taGVscF8yNHgyNC5zdmciIGFsdD0iIiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiPgogICAgPC9idXR0b24+CiAgICA8c3BhbiByb2xlPSJzdGF0dXMiPjwvc3Bhbj4KICA8L3NwYW4+CgogICAgPC9saT4KICAgIDxsaT4KICAgICAgCiAgPGltZyBjbGFzcz0iVW5pdE1ldGFEZXRhaWxzLWljb24ic3JjPSIvc3RhdGljL2ltZy9wa2ctaWNvbi1jaGVja0NpcmNsZU91dGxpbmVfMjR4MjQuc3ZnIiBhbHQ9ImNoZWNrZWQiaGVpZ2h0PSIyNCIgd2lkdGg9IjI0Ij4KCiAgICAgIFJlZGlzdHJpYnV0YWJsZSBsaWNlbnNlCiAgICAgIAogIDxzcGFuIGNsYXNzPSJVbml0TWV0YURldGFpbHMtdG9nZ2xldGlwIj4KICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBhcmlhLWxhYmVsPSJtb3JlIGluZm8iIGRhdGEtdG9nZ2xldGlwLWNvbnRlbnQ9IlJlZGlzdHJpYnV0YWJsZSBsaWNlbnNlcyBwbGFjZSBtaW5pbWFsIHJlc3RyaWN0aW9ucyBvbiBob3cgc29mdHdhcmUgY2FuIGJlIHVzZWQsIG1vZGlmaWVkLCBhbmQgcmVkaXN0cmlidXRlZC4iPgogICAgICA8aW1nIGNsYXNzPSJVbml0TWV0YURldGFpbHMtaWNvbiIgc3JjPSIvc3RhdGljL2ltZy9wa2ctaWNvbi1oZWxwXzI0eDI0LnN2ZyIgYWx0PSIiIGhlaWdodD0iMjQiIHdpZHRoPSIyNCI+CiAgICA8L2J1dHRvbj4KICAgIDxzcGFuIHJvbGU9InN0YXR1cyI+PC9zcGFuPgogIDwvc3Bhbj4KCiAgICA8L2xpPgogICAgPGxpPgogICAgICAKICA8aW1nIGNsYXNzPSJVbml0TWV0YURldGFpbHMtaWNvbiJzcmM9Ii9zdGF0aWMvaW1nL3BrZy1pY29uLWNoZWNrQ2lyY2xlT3V0bGluZV8yNHgyNC5zdmciIGFsdD0iY2hlY2tlZCJoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiPgoKICAgICAgVGFnZ2VkIHZlcnNpb24KICAgICAgCiAgPHNwYW4gY2xhc3M9IlVuaXRNZXRhRGV0YWlscy10b2dnbGV0aXAiPgogICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGFyaWEtbGFiZWw9Im1vcmUgaW5mbyIgZGF0YS10b2dnbGV0aXAtY29udGVudD0iTW9kdWxlcyB3aXRoIHRhZ2dlZCB2ZXJzaW9ucyBnaXZlIGltcG9ydGVycyBtb3JlIHByZWRpY3RhYmxlIGJ1aWxkcy4iPgogICAgICA8aW1nIGNsYXNzPSJVbml0TWV0YURldGFpbHMtaWNvbiIgc3JjPSIvc3RhdGljL2ltZy9wa2ctaWNvbi1oZWxwXzI0eDI0LnN2ZyIgYWx0PSIiIGhlaWdodD0iMjQiIHdpZHRoPSIyNCI+CiAgICA8L2J1dHRvbj4KICAgIDxzcGFuIHJvbGU9InN0YXR1cyI+PC9zcGFuPgogIDwvc3Bhbj4KCiAgICA8L2xpPgogICAgPGxpPgogICAgICAKICA8aW1nIGNsYXNzPSJVbml0TWV0YURldGFpbHMtaWNvbiJzcmM9Ii9zdGF0aWMvaW1nL3BrZy1pY29uLWNoZWNrQ2lyY2xlT3V0bGluZV8yNHgyNC5zdmciIGFsdD0iY2hlY2tlZCJoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiPgoKICAgICAgU3RhYmxlIHZlcnNpb24KICAgICAgCiAgPHNwYW4gY2xhc3M9IlVuaXRNZXRhRGV0YWlscy10b2dnbGV0aXAiPgogICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGFyaWEtbGFiZWw9Im1vcmUgaW5mbyIgZGF0YS10b2dnbGV0aXAtY29udGVudD0iV2hlbiBhIHByb2plY3QgcmVhY2hlcyBtYWpvciB2ZXJzaW9uIHYxIGl0IGlzIGNvbnNpZGVyZWQgc3RhYmxlLiI+CiAgICAgIDxpbWcgY2xhc3M9IlVuaXRNZXRhRGV0YWlscy1pY29uIiBzcmM9Ii9zdGF0aWMvaW1nL3BrZy1pY29uLWhlbHBfMjR4MjQuc3ZnIiBhbHQ9IiIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0Ij4KICAgIDwvYnV0dG9uPgogICAgPHNwYW4gcm9sZT0ic3RhdHVzIj48L3NwYW4+CiAgPC9zcGFuPgoKICAgIDwvbGk+CiAgPC91bD4KCiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9IlVuaXRNZXRhLWxlYXJuIj4KICAgICAgPGEgaHJlZj0iL2Fib3V0I2Jlc3QtcHJhY3RpY2VzLWgyIj5MZWFybiBtb3JlPC9hPgogICAgPC9kaXY+CiAgICA8aDIgY2xhc3M9IlVuaXRNZXRhLXJlcG9UaXRsZSI+UmVwb3NpdG9yeTwvaDI+CiAgICA8ZGl2IGNsYXNzPSJVbml0TWV0YS1yZXBvIj4KICAgICAgCiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uIiB0aXRsZT0iaHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9uIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciI+CiAgICAgICAgICBnaXRodWIuY29tL3JvYmZpZy9jcm9uCiAgICAgICAgPC9hPgogICAgICAKICAgIDwvZGl2PgogICAgCiAgICA8ZGl2IGNsYXNzPSJVbml0TWV0YS1saW5rcyI+CiAgICAgIDx1bD4KICAgICAgICAKICAKCiAgICAgICAgCiAgCgogICAgICAgIAogIAoKICAgICAgPC91bD4KICAgIDwvZGl2PgogIDwvZGl2PgoKICAgIDwvZGl2PgogIDwvZGl2PgoKICA8L2Rpdj4KCiAgPGRpYWxvZyBjbGFzcz0iSnVtcERpYWxvZyBEaWFsb2ciPgogICAgPGgyIGNsYXNzPSJEaWFsb2ctdGl0bGUiPkp1bXAgdG88L2gyPgogICAgPGZvcm0gbWV0aG9kPSJkaWFsb2ciPgogICAgICA8ZGl2IGNsYXNzPSJKdW1wRGlhbG9nLWZpbHRlciI+CiAgICAgICAgPGlucHV0IGNsYXNzPSJKdW1wRGlhbG9nLWlucHV0IiBhdXRvY29tcGxldGU9Im9mZiIgdHlwZT0idGV4dCI+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJKdW1wRGlhbG9nLWJvZHkiPgogICAgICAgIDxkaXYgY2xhc3M9Ikp1bXBEaWFsb2ctbGlzdCI+PC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJEaWFsb2ctYWN0aW9ucyI+CiAgICAgICAgPGJ1dHRvbiBjbGFzcz0iRGlhbG9nLWJ1dHRvbiI+Q2xvc2U8L2J1dHRvbj4KICAgICAgPC9kaXY+CiAgICA8L2Zvcm0+CiAgPC9kaWFsb2c+CgogIDxkaWFsb2cgY2xhc3M9IlNob3J0Y3V0c0RpYWxvZyBEaWFsb2ciPgogICAgPGgyIGNsYXNzPSJEaWFsb2ctdGl0bGUiPktleWJvYXJkIHNob3J0Y3V0czwvaDI+CiAgICA8dGFibGU+CiAgICAgIDx0Ym9keT4KICAgICAgICA8dHI+PHRkIGNsYXNzPSJTaG9ydGN1dHNEaWFsb2cta2V5Ij48Yj4/PC9iPjwvdGQ+PHRkPiA6IFRoaXMgbWVudTwvdGQ+PC90cj4KICAgICAgICA8dHI+PHRkIGNsYXNzPSJTaG9ydGN1dHNEaWFsb2cta2V5Ij48Yj4vPC9iPjwvdGQ+PHRkPiA6IFNlYXJjaCBzaXRlPC90ZD48L3RyPgogICAgICAgIDx0cj48dGQgY2xhc3M9IlNob3J0Y3V0c0RpYWxvZy1rZXkiPjxiPmY8L2I+IG9yIDxiPkY8L2I+PC90ZD48dGQ+IDogSnVtcCB0bzwvdGQ+PC90cj4KICAgICAgPC90Ym9keT4KICAgIDwvdGFibGU+CiAgICA8Zm9ybSBtZXRob2Q9ImRpYWxvZyI+CiAgICAgIDxkaXYgY2xhc3M9IkRpYWxvZy1hY3Rpb25zIj4KICAgICAgICA8YnV0dG9uIGNsYXNzPSJEaWFsb2ctYnV0dG9uIj5DbG9zZTwvYnV0dG9uPgogICAgICA8L2Rpdj4KICAgIDwvZm9ybT4KICA8L2RpYWxvZz4KPC9kaXY+Cjxmb290ZXIgY2xhc3M9IlNpdGUtZm9vdGVyIj4KICAKICA8ZGl2IGNsYXNzPSJGb290ZXIiPgogICAgPGRpdiBjbGFzcz0iRm9vdGVyLWxpbmtzIj4KICAgICAgPGRpdiBjbGFzcz0iRm9vdGVyLWxpbmtDb2x1bW4iPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3NvbHV0aW9ucyIgY2xhc3M9IkZvb3Rlci1saW5rIEZvb3Rlci1saW5rLS1wcmltYXJ5IiB0aXRsZT0iV2h5IEdvIj4KICAgICAgICAgIFdoeSBHbwogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvLmRldi9zb2x1dGlvbnMjdXNlLWNhc2VzIiBjbGFzcz0iRm9vdGVyLWxpbmsiIHRpdGxlPSJVc2UgQ2FzZXMiPgogICAgICAgICAgVXNlIENhc2VzCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3NvbHV0aW9ucyNjYXNlLXN0dWRpZXMiIGNsYXNzPSJGb290ZXItbGluayIgdGl0bGU9IkNhc2UgU3R1ZGllcyI+CiAgICAgICAgICBDYXNlIFN0dWRpZXMKICAgICAgICA8L2E+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJGb290ZXItbGlua0NvbHVtbiI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9sZWFybi5nby5kZXYvIiBjbGFzcz0iRm9vdGVyLWxpbmsgRm9vdGVyLWxpbmstLXByaW1hcnkiIHRpdGxlPSJHZXR0aW5nIFN0YXJ0ZWQiPgogICAgICAgICAgR2V0dGluZyBTdGFydGVkCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcGxheS5nb2xhbmcub3JnIiBjbGFzcz0iRm9vdGVyLWxpbmsiIHRpdGxlPSIiPgogICAgICAgICAgUGxheWdyb3VuZAogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL3RvdXIuZ29sYW5nLm9yZyIgY2xhc3M9IkZvb3Rlci1saW5rIiB0aXRsZT0iIj4KICAgICAgICAgIFRvdXIKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvdGFnZ2VkL2dvP3RhYj1OZXdlc3QiIGNsYXNzPSJGb290ZXItbGluayIgdGl0bGU9IiI+CiAgICAgICAgICBTdGFjayBPdmVyZmxvdwogICAgICAgIDwvYT4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1saW5rQ29sdW1uIj4KICAgICAgICA8YSBocmVmPSJodHRwczovL3BrZy5nby5kZXYiIGNsYXNzPSJGb290ZXItbGluayBGb290ZXItbGluay0tcHJpbWFyeSIgdGl0bGU9IkRpc2NvdmVyIFBhY2thZ2VzIj4KICAgICAgICAgIERpc2NvdmVyIFBhY2thZ2VzCiAgICAgICAgPC9hPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iRm9vdGVyLWxpbmtDb2x1bW4iPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L2Fib3V0IiBjbGFzcz0iRm9vdGVyLWxpbmsgRm9vdGVyLWxpbmstLXByaW1hcnkiIHRpdGxlPSJBYm91dCI+CiAgICAgICAgICBBYm91dAogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dvbGFuZy5vcmcvZGwvIiBjbGFzcz0iRm9vdGVyLWxpbmsiIHRpdGxlPSIiPgogICAgICAgICAgRG93bmxvYWQKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9ibG9nLmdvbGFuZy5vcmciIGNsYXNzPSJGb290ZXItbGluayIgdGl0bGU9IiI+CiAgICAgICAgICBCbG9nCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ29sYW5nLm9yZy9kb2MvZGV2ZWwvcmVsZWFzZS5odG1sIiBjbGFzcz0iRm9vdGVyLWxpbmsiIHRpdGxlPSIiPgogICAgICAgICAgUmVsZWFzZSBOb3RlcwogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2Jsb2cuZ29sYW5nLm9yZy9nby1icmFuZCIgY2xhc3M9IkZvb3Rlci1saW5rIiB0aXRsZT0iIj4KICAgICAgICAgIEJyYW5kIEd1aWRlbGluZXMKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9nb2xhbmcub3JnL2NvbmR1Y3QiIGNsYXNzPSJGb290ZXItbGluayI+CiAgICAgICAgICBDb2RlIG9mIENvbmR1Y3QKICAgICAgICA8L2E+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJGb290ZXItbGlua0NvbHVtbiI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cudHdpdHRlci5jb20vZ29sYW5nIiBjbGFzcz0iRm9vdGVyLWxpbmsgRm9vdGVyLWxpbmstLXByaW1hcnkiIHRpdGxlPSJDb25uZWN0Ij4KICAgICAgICAgIENvbm5lY3QKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cudHdpdHRlci5jb20vZ29sYW5nIiBjbGFzcz0iRm9vdGVyLWxpbmsiIHRpdGxlPSIiPgogICAgICAgICAgVHdpdHRlcgogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ29sYW5nIiBjbGFzcz0iRm9vdGVyLWxpbmsiIHRpdGxlPSIiPgogICAgICAgICAgR2l0SHViCiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vaW52aXRlLnNsYWNrLmdvbGFuZ2JyaWRnZS5vcmcvIiBjbGFzcz0iRm9vdGVyLWxpbmsiIHRpdGxlPSIiPgogICAgICAgICAgU2xhY2sKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cubWVldHVwLmNvbS9wcm8vZ28iIGNsYXNzPSJGb290ZXItbGluayIgdGl0bGU9IiI+CiAgICAgICAgICBNZWV0dXAKICAgICAgICA8L2E+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0iRm9vdGVyIj4KICAgIDxkaXYgY2xhc3M9IkNvbnRhaW5lciBDb250YWluZXItLWZ1bGxCbGVlZCI+CiAgICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1ib3R0b20iPgogICAgICAgIDxpbWcgY2xhc3M9IkZvb3Rlci1nb3BoZXIiIHNyYz0iL3N0YXRpYy9pbWcvcGlsb3QtYnVzdC5zdmciIGFsdD0iR29waGVyIGluIGZsaWdodCBnb2dnbGVzIj4KICAgICAgICA8dWwgY2xhc3M9IkZvb3Rlci1saXN0Um93Ij4KICAgICAgICAgIDxsaSBjbGFzcz0iRm9vdGVyLWxpc3RJdGVtIj48YSBocmVmPSJodHRwczovL2dvLmRldi9jb3B5cmlnaHQiPkNvcHlyaWdodDwvYT48L2xpPgogICAgICAgICAgPGxpIGNsYXNzPSJGb290ZXItbGlzdEl0ZW0iPjxhIGhyZWY9Imh0dHBzOi8vZ28uZGV2L3RvcyI+VGVybXMgb2YgU2VydmljZTwvYT48L2xpPgogICAgICAgICAgPGxpIGNsYXNzPSJGb290ZXItbGlzdEl0ZW0iPjxhIGhyZWY9Imh0dHA6Ly93d3cuZ29vZ2xlLmNvbS9pbnRsL2VuL3BvbGljaWVzL3ByaXZhY3kvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciI+UHJpdmFjeQogICAgICAgICAgICAgIFBvbGljeTwvYT48L2xpPgogICAgICAgICAgPGxpIGNsYXNzPSJGb290ZXItbGlzdEl0ZW0iPgogICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dvbGFuZy5vcmcvcy9wa2dzaXRlLWZlZWRiYWNrIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciI+CiAgICAgICAgICAgICAgUmVwb3J0IGFuIElzc3VlCiAgICAgICAgICAgIDwvYT4KICAgICAgICAgIDwvbGk+CiAgICAgICAgICA8bGkgY2xhc3M9IkZvb3Rlci1saXN0SXRlbSI+PGEgaHJlZj0iaHR0cHM6Ly9nb2xhbmcub3JnIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciI+Z29sYW5nLm9yZzwvYT48L2xpPgogICAgICAgIDwvdWw+CiAgICAgICAgPGEgY2xhc3M9IkZvb3Rlci1nb29nbGVMb2dvIiBocmVmPSJodHRwczovL2dvb2dsZS5jb20iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIj4KICAgICAgICAgIDxpbWcgY2xhc3M9IkZvb3Rlci1nb29nbGVMb2dvSW1nIiBzcmM9Ii9zdGF0aWMvaW1nL2dvb2dsZS13aGl0ZS5zdmciIGFsdD0iR29vZ2xlIGxvZ28iPgogICAgICAgIDwvYT4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2Rpdj4KPC9mb290ZXI+Cgo8c2NyaXB0PgogIGZ1bmN0aW9uIGxvYWRTY3JpcHQoc3JjLCBwcm9wcyA9IHt9KSB7CiAgICBsZXQgcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpOwogICAgcy5zcmMgPSBzcmM7CiAgICBmb3IgKGNvbnN0IFtrLCB2XSBvZiBPYmplY3QuZW50cmllcyhwcm9wcykpIHsKICAgICAgc1trXSA9IHYKICAgIH0KICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQocyk7CiAgfQogIGxvYWRTY3JpcHQoIi9zdGF0aWMvanMvc2l0ZS5qcyIpOwo8L3NjcmlwdD4KCgogIDxkaXYgY2xhc3M9ImpzLWNhbm9uaWNhbFVSTFBhdGgiIGRhdGEtY2Fub25pY2FsLXVybC1wYXRoPSIvZ2l0aHViLmNvbS9yb2JmaWcvY3JvbkB2MS4yLjAiIGhpZGRlbiAvPgogIDxzY3JpcHQ+CiAgICBsb2FkU2NyaXB0KCcvc3RhdGljL2pzL2tleWJvYXJkLmpzJywge3R5cGU6ICdtb2R1bGUnLCBhc3luYzogdHJ1ZSwgZGVmZXI6IHRydWV9KQogICAgbG9hZFNjcmlwdCgnL3N0YXRpYy9qcy91bml0LmpzJywge3R5cGU6ICdtb2R1bGUnLCBhc3luYzogdHJ1ZSwgZGVmZXI6IHRydWV9KQogIDwvc2NyaXB0PgogIAogIDxzY3JpcHQ+CiAgICBsb2FkU2NyaXB0KCIvc3RhdGljL2pzL2p1bXAuanMiLCB7dHlwZTogJ21vZHVsZScsIGFzeW5jOiB0cnVlLCBkZWZlcjogdHJ1ZX0pOwogIDwvc2NyaXB0PgogIDxzY3JpcHQ+CiAgICBsb2FkU2NyaXB0KCIvc3RhdGljL2pzL3BsYXlncm91bmQuanMiLCB7dHlwZTogJ21vZHVsZScsIGFzeW5jOiB0cnVlLCBkZWZlcjogdHJ1ZX0pOwogIDwvc2NyaXB0PgogIDxzY3JpcHQ+CiAgICBsb2FkU2NyaXB0KCcvc3RhdGljL2pzL3NpZGVuYXYuanMnLCB7dHlwZTogJ21vZHVsZScsIGFzeW5jOiB0cnVlLCBkZWZlcjogdHJ1ZX0pCiAgPC9zY3JpcHQ+CgoKCgo8c2NyaXB0IGFzeW5jPgogIGNvbnN0IGd0bUlkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmpzLWd0bUlEJykuZGF0YXNldC5ndG1pZDsgLy8gdGhpcyB3aWxsIHRocm93IGlmIHRoZSBxdWVyeVNlbGVjdG9yIGNhbuKAmXQgZmluZCB0aGUgZWxlbWVudAogIGlmICghZ3RtSWQpIHsKICAgIHRocm93IG5ldyBFcnJvcignR29vZ2xlIFRhZyBNYW5hZ2VyIElEIG5vdCBmb3VuZCcpOwogIH0KICBsb2FkU2NyaXB0KGBodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ndG0uanM/aWQ9JHtndG1JZH1gKTsKPC9zY3JpcHQ+Cjxub3NjcmlwdD4KICA8aWZyYW1lIHNyYz0iaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vbnMuaHRtbD9pZD1HVE0tVzhNVlFYRyIKICAgICAgICAgIGhlaWdodD0iMCIgd2lkdGg9IjAiIHN0eWxlPSJkaXNwbGF5Om5vbmU7dmlzaWJpbGl0eTpoaWRkZW4iPgogIDwvaWZyYW1lPgo8L25vc2NyaXB0PgoK
    http_version: 
  recorded_at: Tue, 20 Apr 2021 20:54:04 GMT
recorded_with: VCR 4.0.0
